.***************************************************************************
.*=== AS GROUP ===         : AS_0140020S 2005/10/20 13:55
.*USER IF AS               : UAS0140020S 2005/10/20 13:55
.*USER IF TP               : UTP0140020S 2005/10/20 13:55
.*ARM CONTROL AS           : AAS0140020S 2005/10/20 13:55
.*USER IF AS MESSAGE FILE  : MAS10020SEN 2005/10/20 13:58
.*USER IF TP MESSAGE FILE  : MTP10020SEN 2005/10/20 13:59
.*ARM DATA FILE            : ARM0140020S 2005/10/20 13:58
.*USER IF IPL              : UIP01350000 2005/07/27
.*ARM CONTROL IPL          : AIP01300000 2005/07/27
.*=== SERVO GROUP ===      : SV_0400001J 2007/01/25 12:40
.*ARM CONTROL SERVO        : ASV0400001J 2007/01/25 12:39
.*SRV DATA FILE            : ASP0400001J 2007/01/25 13:02
.*ARM CONTROL SERVO CONT.  : ASC0400001J 2007/01/25
.*   [Shipment setting data] 
.*There is no Shipment setting data.
.***************************************************************************
.NETCONF     192.168.0.1,"KAWASAKI",255.255.255.0,0.0.0.0,0.0.0.0,0.0.0.0,""
.ROBOTDATA1
ZROBOT.TYPE    10  63   6 149       -3421   FW003N-E001 ( 2023-12-03 23:28 )
ZSYSTEM         1   5   1        -106
ZLINEAR         0   0   0   0   0   0  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1         179
CONT_CODE     701      -10516
ZZERO         268434677 268428386 268427452 268427289 268433661 268433580 268435456 268435456 268435456 268435456 268435456 268435456 268435456 268435456 268435456 268435456 268435456 268435456   537286276
ZLANGUAGE     ON  -3683
LANG_NO               0         1
ZSIGSPEC       32  32 256       -4801
ZSIGSPEC2      32  32        -961
ZSETAPPLI          0      0      8      8      0     63       -1186
ZAXCONFIG       1  -1  -1  -1  -1  -1  -1  -1  -1  -1         119
ZMTNIMP_01    ON  -3361
ZMTNIMP_02    ON  -3386
ZMTNIMP_03    ON  -3411
ZMTNIMP_04    ON  -3437
ZMTNIMP_05    ON  -3463
ZMTNIMP_06    OFF -3491
ZSPEC01_05        3.000  1010827263
ZSPEC01_06        0.000          -1
ZSPEC01_09          500       -7501
ZSPEC01_10           10        -151
ZSPEC02_01        0.000          -1
ZSPEC02_02        0.500  1325400063
ZSLEWTIME         0.000          -1
ZWCOMPK           0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000          -1
ZCPUCACHE     OFF -3595
ZULIMIT         160.000   150.000   120.000   360.000   135.000   360.000    10.000    10.000    10.000    10.000    10.000    10.000    10.000    10.000    10.000    10.000    10.000    10.000  -105537537
ZLLIMIT        -160.000   -60.000  -150.000  -360.000  -135.000  -360.000   -10.000   -10.000   -10.000   -10.000   -10.000   -10.000   -10.000   -10.000   -10.000   -10.000   -10.000   -10.000  2049318911
ZSETACCEL       1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   680525823
ZSETDECEL       1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   680525823
ZSETENVCHK      1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   680525823
ZSETSPCHK       1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   680525823
ZSETKVFF        1.000   1.000   1.000   1.000   1.000   1.000  -1.000  -1.000  -1.000  -1.000  -1.000  -1.000  -1.000  -1.000  -1.000  -1.000  -1.000  -1.000 -1262485505
ZSETKVFFACC     0.550   0.850   0.230   0.100  -0.400  -0.250 -11.000 -11.000 -11.000 -11.000 -11.000 -11.000 -11.000 -11.000 -11.000 -11.000 -11.000 -11.000 -1831587020
ZSETKVFFJRK     4.800   5.700   3.200   5.000   7.000   6.000 -11.000 -11.000 -11.000 -11.000 -11.000 -11.000 -11.000 -11.000 -11.000 -11.000 -11.000 -11.000 -1774256135
ZSETKAFF2       1.000   1.000   1.000   1.000   1.000   1.000  -1.000  -1.000  -1.000  -1.000  -1.000  -1.000  -1.000  -1.000  -1.000  -1.000  -1.000  -1.000 -1262485505
ZSAVEMR                 5       65508          48           1          53        1126           0           0           0           0           0           0           0           0           0           0           0           0    -1001116
ZRADIUS         820.000   700.000   450.000   200.000   200.000   100.000     1.000     1.000     1.000     1.000     1.000     1.000     1.000     1.000     1.000     1.000     1.000     1.000  -211214337
ZJTSPEED        240.000   100.000   140.000   360.000   180.000   360.000  1200.000    10.000    10.000    10.000    10.000    10.000    10.000    10.000    10.000    10.000    10.000    10.000  -223993857
ZACCTIME          0.300     0.300     0.300     0.300     0.300     0.300     0.384     0.384     0.384     0.384     0.384     0.384     0.384     0.384     0.384     0.384     0.384     0.384   872163603
ZDEG_BIT       4.3945000000e-04  3.6621000000e-04 -2.7465800000e-04  6.5930000000e-04  2.7465800000e-04  6.5918000000e-04  3.6928830000e-04  3.6928830000e-04  3.6928830000e-04  3.6928830000e-04  3.6928830000e-04  3.6928830000e-04  3.6928830000e-04  3.6928830000e-04  3.6928830000e-04  3.6928830000e-04  3.6928830000e-04  3.6928830000e-04  2062910285  1204631898
LIN_COOP        0   0   0   0   0   0   0   0   0   0   0   0          -1
LIN_CO_TYPE     0   0   0   0   0   0   0   0   0   0   0   0          -1
COUPFA7        0.0000000000e+00          -1          -1
ROT_TYPE        0          -1
ROT_L1            0.000          -1
ROT_L2            0.000          -1
ROT_MAT1          0.000     0.000     0.000     0.000     0.000     0.000          -1
ROT_MAT2          0.000     0.000     0.000     0.000     0.000     0.000          -1
ROT_MAT3          0.000     0.000     0.000     0.000     0.000     0.000          -1
ROT_MAT4          0.000     0.000     0.000     0.000     0.000     0.000          -1
ROT_MAT5          0.000     0.000     0.000     0.000     0.000     0.000          -1
ROT_MAT6          0.000     0.000     0.000     0.000     0.000     0.000          -1
ROT_BASE          0.000     0.000     0.000     0.000     0.000     0.000          -1
ROT_TOOL          0.000     0.000     0.000     0.000     0.000     0.000          -1
ROT_COOP        0   0   0   0   0   0   0   0   0   0   0   0          -1
TURN_MAT          0.000     0.000     0.000     0.000     0.000     0.000          -1
TURN_COOP       0   0   0   0   0   0   0   0   0   0   0   0          -1
TURNLIN         0          -1
TURN_DIR        0          -1
JTCHANNEL       0   1   2   3   4   5  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1         -46
SRV_PARAM       0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0          -1
ZEXTENC_BATCHK    1   1         -31
CD_ID_CODE    242       -3631
ID_FBM_EX       0   0          -1
ARM_MOTION_ID    4         -61
ARM_MOTION_ID_EX    0   0          -1
TYPE_PB         1         -16
TYPE_PB_EX      0   0          -1
ZENDLESS               0          0          0          0          -1          -1
MOTOR_TYPE      0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0          -1
DUAL_SYS           0     10      0      0        -151
DUAL_OFF         0.0000          -1
ZSIGWAIT        0          -1
ZPLOOP          0   0   0          -1
ZSETMAXDAOUT  1         -16
ZSETTPNK          1.100     0.900     0.900     0.900
ZSETCYCOVER   3         -46
ZDGACCEF      1.0000 1.2000 1.3000 0.8000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000   678166533
ZDGDECEF      1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000   680525823
ZDGFRIST      6.1570 40.7233 12.0805 3.1299 14.1210 11.9776 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000   373445163
ZDGFRID0      6.1570 31.5934 8.7254 1.9460 12.1257 10.8405 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000   406477863
ZDGFRID1      1.0560 0.0648 0.7916 0.1153 0.3734 0.0534 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000   720563073
DTIMECONST      2   2   2   2   2   2   2   2   2   2   2   2   2   2   2   2   2   2        -541
DTIMECSTSFT     4   4   4   4   4   4   4   4   4   4   4   4   4   4   4   4   4   4       -1081
ZDCOLT          300   290   450   110   460   470     0     0     0     0     0     0     0     0     0     0     0     0      -31201
ZDCOLR          350   250   230   430   430   310     0     0     0     0     0     0     0     0     0     0     0     0      -30001
ZDCOLTJ          30    30    30    20    40    40     0     0     0     0     0     0     0     0     0     0     0     0       -2851
ZDCOLRJ          60    20    30    70    60    40     0     0     0     0     0     0     0     0     0     0     0     0       -4201
ZSETIPALM       1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   1.000   680525823
ZSETI2ALM       1.070   1.070   1.070   1.070   1.070   1.070   1.070   1.070   1.070   1.070   1.070   1.070   1.070   1.070   1.070   1.070   1.070   1.070   670616793
ZSETIPTIME           32
ZSETMAXPUMP   1         -16
TEACH_LCOOP     0   0   0   0   0   0   0   0   0   0   0   0          -1
ZARMIDSET     ON   ON    -4331
ZKPCF3         -1.000
ZKPCF3JT_SW    1  1  1  1  1  1         -91
ZKPCF3JT_FREQ   -1.000  -1.000  -1.000  -1.000  -1.000  -1.000 -1262485505
ZLINSPEED      1500.000  -117211137
ZROTSPEED         8.727   810648858
ZLINSPEEDPARAM      1.000     1.000     1.000     1.000     1.000     1.000     1.000     1.000     1.000     1.000     1.000     1.000     0.000     0.000     0.000     0.000     0.000     0.000   759169023
ZLINACCTIME       0.050     0.050  1627389948
ZRADIUS_TEACH    820.000   700.000   450.000   200.000   200.000   100.000     1.000     1.000     1.000     1.000     1.000     1.000     1.000     1.000     1.000     1.000     1.000     1.000  -211214337
ZRADIUS_TEACH2    820.000   700.000   450.000   200.000   200.000   100.000     1.000     1.000     1.000     1.000     1.000     1.000     1.000     1.000     1.000     1.000     1.000     1.000  -211214337
EXSPIN                0         0          -1
ZTQRPFWPR      0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00          -1          -1
ZTQRPFWPH      0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00          -1          -1
ZTQRPFWA0     0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000          -1
ZTQRPFWA1     0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000          -1
ZTQRPRVPR      0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00          -1          -1
ZTQRPRVPH      0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00          -1          -1
ZTQRPRVA0     0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000          -1
ZTQRPRVA1     0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000          -1
ZTQRPVELM     0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000          -1
ZTQRPOUTL     0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000          -1
ZVQRAFWPR      0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00          -1          -1
ZVQRAFWPH      0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00          -1          -1
ZVQRAFWA0     0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000          -1
ZVQRAFWA1     0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000          -1
ZVQRARVPR      0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00          -1          -1
ZVQRARVPH      0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00          -1          -1
ZVQRARVA0     0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000          -1
ZVQRARVA1     0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000          -1
ZVQRAVELM     0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000          -1
ZVQRAOUTL     0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000          -1
ZVQRBFWPR      0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00          -1          -1
ZVQRBFWPH      0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00          -1          -1
ZVQRBFWA0     0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000          -1
ZVQRBFWA1     0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000          -1
ZVQRBRVPR      0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00          -1          -1
ZVQRBRVPH      0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00          -1          -1
ZVQRBRVA0     0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000          -1
ZVQRBRVA1     0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000          -1
ZVQRBVELM     0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000          -1
ZVQRBOUTL     0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000          -1
ZVQRCFWPR      0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00          -1          -1
ZVQRCFWPH      0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00          -1          -1
ZVQRCFWA0     0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000          -1
ZVQRCFWA1     0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000          -1
ZVQRCRVPR      0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00          -1          -1
ZVQRCRVPH      0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00          -1          -1
ZVQRCRVA0     0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000          -1
ZVQRCRVA1     0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000          -1
ZVQRCVELM     0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000          -1
ZVQRCOUTL     0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000          -1
ZVQRDFWPR      0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00          -1          -1
ZVQRDFWPH      0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00          -1          -1
ZVQRDFWA0     0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000          -1
ZVQRDFWA1     0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000          -1
ZVQRDRVPR      0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00          -1          -1
ZVQRDRVPH      0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00  0.0000000000e+00          -1          -1
ZVQRDRVA0     0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000          -1
ZVQRDRVA1     0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000          -1
ZVQRDVELM     0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000          -1
ZVQRDOUTL     0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000          -1
ZFGEFTA       0.000000          -1
ZFGEFTB       0.000000          -1
ZFGEFTC       1.000000  1199570943
ZFTOLGA       0.000000          -1
ZFTOLGB       -1.000000  -947912705
ZFTOLGC       6.000000   884998143
ZFACCTA       0.000000          -1
ZFACCTB       -0.090000  -499961045
ZFACCTC       0.790000  1252419168
NETCONF      192.168.0.1,"Kawasaki",255.255.255.0,0.0.0.0,0.0.0.0,0.0.0.0,""
ZSETREFFLT_T         96        96        96       -4321
ZSETREFSIG_T          0          -1
ZCINTFAC          1.000     0.000     1.000    37.411    10.000    48.000     0.000     0.000     0.000     0.000   378907533
ZVREC         OFF -3145
CE_ERRMASK    OFF -4302
KCOMJUMPR         1.500     1.300     1.500     1.300     1.300     1.300     1.300     1.300     1.300     1.300     1.300     1.300     1.300     1.300     1.300     1.300     1.300     1.300
OP_GENK       ON  -3816
OP_NEWSERVO   ON  -4911
OP_ZSCPSWSET  ON  -5116
OP_JT23WSRV   ON  -4944
OP_WEIGHTACC  OFF -3994
OP_DYCOMP     OFF -4425
OP_DRYRUN     ON  -4702
OP_NOBRKTOOL  OFF -4766
OP_VACDC      OFF -3507
OP_VACDCTYPE    1
OP_VACDCRATIO  1.000
OP_MIRROR     ON  -4649
OP_SHIFT      ON  -4287
OP_DATACONV   ON  -4759
OP_AUTOTOOL   ON  -4732
OP_FTOOL      OFF -4230
OP_WORKDIME   OFF -4235
OP_PALLET     OFF -4374
OP_SENSING    OFF -4258
OP_CHGGAIN    OFF -4098
OP_SFTABS     OFF -4287
OP_FLEXCOMP   OFF -4637
OP_IFP        ON  -3800
OP_INTDEFSIG  ON  -4326
OP_MLTOXWX    OFF -5336
OP_OUTCUBE    ON  -4106
OP_MTROFFERR  OFF -4853
OP_OXKEEPHLD  OFF -4262
OP_STORAGE    OFF -4060
OP_BSPEED     OFF -3768
OP_DIRECTSP   OFF -4733
OP_CONSTAD    OFF -4042
OP_MLTSPDSET  OFF -4926
OP_SPLMT      OFF -4530
OP_ROTVEL     ON  -4383
OP_SPTYPE2    ON  -3727
OP_ACCUTYPE2  ON  -3818
OP_MTN_CHK    OFF -4417
OP_COLDET     ON  -4299
OP_BLTARM     OFF -4280
OP_IPKALM     OFF -4145
OP_KADOUINFO  ON  -4586
OP_IMON2      OFF -3341
OP_AUTOHELP   OFF -4590
OP_INVCPY     OFF -4838
OP_COOP       OFF -4120
OP_EDIEXE     OFF -4012
OP_CIRCLE     ON  -3854
OP_HYBINT     OFF -4548
OP_BUILT      OFF -4398
OP_VISION     OFF -4445
OP_FDD        OFF -3287
OP_RELAY      OFF -4422
OP_COMMU1     OFF -3562
OP_FIELDBUS   OFF -4658
OP_CCLINK     OFF -4078
OP_RIO        OFF -3931
OP_CNET       OFF -4086
OP_KLOGIC     OFF -3816
OP_SLOGIC     OFF -3869
OP_SPIN       OFF -4090
OP_OUTDISIG   OFF -4363
OP_HANDCC     OFF -3571
OP_EXTSPIN    OFF -4610
OP_OUTSPEED   OFF -4190
OP_TOSYUT     OFF -5059
STEPPER2      OFF -3247
ZSVPRM_SSC01_1       0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0
ZSVPRM_SSC01_2       0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0
ZSVPRM_SSC02_1       0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0
ZSVPRM_SSC02_2       0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0
ZSVPRM_SSC03_1       0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0
ZSVPRM_SSC03_2       0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0
ZSVPRM_SSC04_1       0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0
ZSVPRM_SSC04_2       0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0
ZSVPRM_SSC05_1       0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0
ZSVPRM_SSC05_2       0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0
ZSVPRM_SSC06_1       0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0
ZSVPRM_SSC06_2       0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0
ZSVPRM_SSC07_1       0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0
ZSVPRM_SSC07_2       0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0
ZSVPRM_SSC08_1       0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0
ZSVPRM_SSC08_2       0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0
ZSVPRM_SSC09_1       0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0
ZSVPRM_SSC09_2       0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0
ZSVPRM_SSC010_1       0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0
ZSVPRM_SSC010_2       0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0
ZSVPRM_SSC011_1       0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0
ZSVPRM_SSC011_2       0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0
ZSVPRM_SSC012_1       0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0
ZSVPRM_SSC012_2       0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0
ZSVPRM_SSC013_1       0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0
ZSVPRM_SSC013_2       0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0
ZSVPRM_SSC014_1       0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0
ZSVPRM_SSC014_2       0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0
ZSVPRM_SSC015_1       0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0
ZSVPRM_SSC015_2       0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0
ZSVPRM_SSC016_1       0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0
ZSVPRM_SSC016_2       0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0      0
SRVPRM_CH1_A      0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0          -1
SRVPRM_CH1_B      0     0     0     0     0     0     0     0          -1
SRVPRM_CH2_A      0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0          -1
SRVPRM_CH2_B      0     0     0     0     0     0     0     0          -1
SRVPRM_CH3_A      0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0          -1
SRVPRM_CH3_B      0     0     0     0     0     0     0     0          -1
SRVPRM_CH4_A      0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0          -1
SRVPRM_CH4_B      0     0     0     0     0     0     0     0          -1
SRVPRM_CH5_A      0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0          -1
SRVPRM_CH5_B      0     0     0     0     0     0     0     0          -1
SRVPRM_CH6_A      0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0          -1
SRVPRM_CH6_B      0     0     0     0     0     0     0     0          -1
SRVPRM_CH7_A      0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0          -1
SRVPRM_CH7_B      0     0     0     0     0     0     0     0          -1
SRVPRM_CH8_A      0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0          -1
SRVPRM_CH8_B      0     0     0     0     0     0     0     0          -1
ZSWITCH ZDISP_GANTI     OFF  -513
ZSWITCH ZKILL_LOAD      OFF  -511
ZSWITCH ZLANGUAGE       ON   -507
ZSWITCH ZSAFE_CE        ON   -505
ZSWITCH ZSAFE_STD       OFF  -509
ZSWITCH ZWELD.COMP      OFF  -511
ZSWITCH ZTPLIGHT_ON     OFF  -513
ZSWITCH Z1HS.HAND       OFF  -509
ZSWITCH ZSPLMT          OFF  -503
ZSWITCH ZWSPACE         ON   -503
ZSWITCH ZFIXED          OFF  -503
ZSWITCH ZCLAMP_PULSE1   OFF  -517
ZSWITCH ZHYBINT         OFF  -505
ZSWITCH ZHYBINT.AUTO    OFF  -515
ZSWITCH ZHYBINT.TCH     OFF  -513
ZSWITCH ZIGNCONF        OFF  -507
ZSWITCH ZIGNCONF.TCH    OFF  -515
ZSWITCH ZMODEM          OFF  -503
ZSWITCH ZROTOPT         OFF  -505
ZSWITCH ZCINT           ON   -499
ZSWITCH ZCINT.FIXSP     OFF  -513
ZSWITCH ZCINT.AUTO      ON   -509
ZSWITCH ZCINT.C1C1      OFF  -511
ZSWITCH ZCINT.SHORT     ON   -511
ZSWITCH ZNEWPLAN        ON   -505
ZSWITCH ZNEWPLAN.OAT    ON   -513
ZSWITCH ZNEWPLAN.NXT    ON   -513
ZSWITCH ZNSP            ON   -497
ZSWITCH ZJINT           OFF  -501
ZSWITCH ZYCP            ON   -497
ZSWITCH ZSINACC         OFF  -505
ZSWITCH ZCHKCOIN        ON   -505
ZSWITCH ZLADMX          ON   -501
ZSWITCH ZDECKAI         ON   -503
ZSWITCH ZCINTVEKAI      ON   -509
ZSWITCH ZCYCFIX         ON   -503
ZSWITCH ZCMNDJUMPDSP    OFF  -515
ZSWITCH ZSOUKOU         ON   -503
ZSWITCH ZREFFLT         ON   -503
ZSWITCH ZFIRFLT         OFF  -505
ZSWITCH ZREFKAI         ON   -503
ZSWITCH ZREFSIG         OFF  -505
ZSWITCH ZRELATE         OFF  -505
ZSWITCH ZEMGRESET       OFF  -509
ZSWITCH ZCHKHOME        OFF  -507
ZSWITCH ZADFIX          OFF  -503
ZSWITCH ZIPEAKWRN       ON   -507
ZSWITCH ZI2MONWRN       ON   -507
ZSWITCH ZCMNDJ_STOP     ON   -511
ZSWITCH ZPSB.FANCTL     ON   -511
ZSWITCH ZPSB.HOLDTIME   ON   -515
ZSWITCH ZPSB.PTYPE      OFF  -511
ZSWITCH ZERRLOGALL      OFF  -511
ZSWITCH ZUSR_SENSOR     OFF  -513
ZSWITCH ZBUILT_VALVE    ON   -513
ZSWITCH ZVALVE_COMMON   ON   -515
ZSWITCH ZEXIST_TP       ON   -507
ZSWITCH ZEXIST1_PNL     ON   -511
ZSWITCH ZEXIST2_PNL     OFF  -513
ZSWITCH ZEXIST_ENC      OFF  -511
ZSWITCH ZEXIST1_SH      ON   -509
ZSWITCH ZEXIST2_SH      ON   -509
ZSWITCH ZEXIST3_SH      ON   -509
ZSWITCH ZEXIST4_SH      ON   -509
ZSWITCH ZENA_REC        ON   -505
ZSWITCH ZTP_TRIAL       OFF  -509
ZSWITCH ZTP.TRG.SW      ON   -509
ZSWITCH ZMASK1_SV       OFF  -509
ZSWITCH ZMASK2_SV       OFF  -509
ZSWITCH ZMASK1_LS       OFF  -509
ZSWITCH ZMASK2_LS       OFF  -509
ZSWITCH ZMASK1_PU       ON   -507
ZSWITCH ZMASK2_PU       ON   -507
ZSWITCH ZCONSTAD        OFF  -507
ZSWITCH ZSCP            ON   -497
ZSWITCH ZFCP            OFF  -499
ZSWITCH ZF2CP           OFF  -501
ZSWITCH ZMCP            OFF  -499
ZSWITCH ZTCH_TOPPEN     OFF  -513
ZSWITCH ZCHK_TOPPEN     OFF  -513
ZSWITCH ZREP_TOPPEN     OFF  -513
ZSWITCH ZTCH2_TOPPEN    ON   -513
ZSWITCH ZCHK2_TOPPEN    ON   -513
ZSWITCH ZREP2_TOPPEN    ON   -513
ZSWITCH ZTPPORT         OFF  -505
ZSWITCH ZINSIG          OFF  -503
ZSWITCH ZEXTSW          OFF  -503
ZSWITCH ZADCCAL         OFF  -505
ZSWITCH Z_IVAR          ON   -501
ZSWITCH ZNCHVAR         OFF  -505
ZSWITCH ZPCMDFLT        OFF  -507
ZSWITCH ZPCMD3FLT       ON   -507
ZSWITCH ZNOTCH          OFF  -503
ZSWITCH ZSRVCHK         ON   -503
ZSWITCH ZCHKASCYC       ON   -507
ZSWITCH ZRESTORE        ON   -505
ZSWITCH ZCALJL          ON   -501
ZSWITCH ZCALGRAV        ON   -505
ZSWITCH ZCALFS          ON   -501
ZSWITCH ZCALKSPVP       ON   -507
ZSWITCH ZCALKOBS        ON   -505
ZSWITCH ZPDFF           ON   -499
ZSWITCH ZVDFF           ON   -499
ZSWITCH ZCOLDET         OFF  -505
ZSWITCH ZATGEF          OFF  -503
ZSWITCH ZCALNCHPRM      OFF  -511
ZSWITCH ZTQRP           OFF  -501
ZSWITCH ZVQRP           OFF  -501
ZSWITCH ZVQRPRO         OFF  -505
ZSWITCH ZIBS.WORD       OFF  -509
ZSWITCH ZIBS.RVS        OFF  -507
ZSWITCH ZCHKROT6        ON   -505
ZSWITCH ZWX.OLD         OFF  -505
ZSWITCH ZMTN1FLT        ON   -505
ZSWITCH ZLINACC         OFF  -505
ZSWITCH ZDIRECTHELP     OFF  -513
ZSWITCH ZAUTOHELP       ON   -507
ZSWITCH ZREFSP          OFF  -503
ZSWITCH ZJNTFLT         OFF  -505
ZSWITCH ZSAFE_USA       OFF  -509
ZSWITCH ZSAFE_TPON      OFF  -511
ZSWITCH ZSAFE_HOLD_FORD OFF  -521
.END
.OPE_INFO1
OPEINFO  10 63 6 149  1176300284  ;(07/4/11 14:04:44) FW003N-E001 
CONT_TIM  2407.0 
SERV_TIM  393.5 
MTON_CNT  19526 
ESTP_CNT  1068 
BRKE_CNT  27674 
MOVE_TJT  164.0 178.5 166.6 145.1 186.2 176.3 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 
DIST_DJT  11139.648 7525.976 9802.104 21899.008 9654.872 25954.584 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 
M_OPEINFO  10 63 6 149  760023144  ;(94/1/31 13:32:24) FW003N-E001 
M_CONT_TIM  3512.5 
M_SERV_TIM  401.5 
M_MTON_CNT  31180 
M_ESTP_CNT  855 
M_BRKE_CNT  41977 
M_MOVE_TJT  167.2 179.7 167.8 146.2 187.8 178.5 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 
M_DIST_DJT  12395.656 7734.400 10079.352 22584.344 9874.560 26654.912 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 
HOUR_MTR  2419.3 
.END
.SYSDATA
REG_POINT       0
BASE              0.000     0.000     0.000     0.000     0.000     0.000
ENV_DATA              0   0   0   0   0   0   0   0   0   0
ENV2_DATA       0   0   0   0   0   0   0   0   0   0
CHECK_SPEC      1   1   1   1   1   1   0   1   0
DEFSIG_I EXT_MTRON       ON   2010
DEFSIG_I EXT_ERR_RESET   OFF     0
DEFSIG_I EXT_CYC_START   OFF  2012
DEFSIG_I EXT_PROGRM_RST  OFF     0
DEFSIG_I EXT_JUMP        OFF
         JUMP_ON             0
         JUMP_OFF            0
         JUMP_ST             0
DEFSIG_I EXT_RPS         OFF
         RPS_ON              0
         RPS_ST              0
         RPS_CODE            0     0     0
DEFSIG_I EXT_IT          OFF  2099
DEFSIG_I EXT_SLOW_REP.   OFF  2199
DEFSIG_I GUN_ACCEPT      OFF     0
DEFSIG_I SENSING         OFF     0
DEFSIG_I SENS_SPD        OFF     0
DEFSIG_I EXT_HOLD_RESET  OFF     0
DEFSIG_I I/F_PAGE1       OFF     0
DEFSIG_I I/F_PAGE2       OFF     0
DEFSIG_I I/F_PAGE3       OFF     0
DEFSIG_I I/F_PAGE4       OFF     0
DEFSIG_I OPTIMIZE_MODE   OFF     0
DEFSIG_I AUTOSAVE_C1     OFF     0
DEFSIG_I AUTOSAVE_C2     OFF     0
DEFSIG_I AUTOSAVE_C3     OFF     0
DEFSIG_O MOTOR_ON        OFF  2005
DEFSIG_O ERROR           OFF     2
DEFSIG_O AUTOMATIC       OFF     3
         CND_RUN         ON 
         CND_EHOLD       OFF
         CND_REPEAT      ON 
         CND_CCONT       ON 
         CND_SCONT       ON 
         CND_TLOCK       OFF
         CND_CYCLE       OFF
         CND_RGSO        OFF
         CND_DRYOFF      OFF
DEFSIG_O CYCLE_START     OFF  2003
DEFSIG_O TEACH_MODE      OFF  2182
DEFSIG_O HOME1           OFF  2181
DEFSIG_O HOME2           OFF     0
DEFSIG_O POWER_ON        OFF     0
DEFSIG_O RGSO            OFF  2099
DEFSIG_O RPS             OFF     0
DEFSIG_O WORK_SPACE_1    OFF     0
DEFSIG_O WORK_SPACE_2    OFF     0
DEFSIG_O WORK_SPACE_3    OFF     0
DEFSIG_O WORK_SPACE_4    OFF     0
DEFSIG_O WORK_SPACE_5    OFF     0
DEFSIG_O WORK_SPACE_6    OFF     0
DEFSIG_O WORK_SPACE_7    OFF     0
DEFSIG_O WORK_SPACE_8    OFF     0
DEFSIG_O WORK_SPACE_9    OFF     0
DEFSIG_O OUT_SPRAY_OK    OFF     0
DEFSIG_O OUT_RPS_OK      OFF     0
DEFSIG_O OUT_RPS_PROG    OFF
         OUT_RPS_CODE        0     0
DEFSIG_O STEP_CODE       OFF
         OUT_STEP_CNT        0     0
DEFSIG_O OUT_DISIG       OFF     4    13  1013
DEFSIG_O RB2AUTOMATIC    OFF     0
DEFSIG_O RB2HOME1        OFF     0
DEFSIG_O RB2HOME2        OFF     0
DEFSIG_O RB2WORK_SPACE_1  OFF     0
DEFSIG_O RB2WORK_SPACE_2  OFF     0
DEFSIG_O RB2WORK_SPACE_3  OFF     0
DEFSIG_O RB2WORK_SPACE_4  OFF     0
DEFSIG_O RB2WORK_SPACE_5  OFF     0
DEFSIG_O RB2WORK_SPACE_6  OFF     0
DEFSIG_O RB2WORK_SPACE_7  OFF     0
DEFSIG_O RB2WORK_SPACE_8  OFF     0
DEFSIG_O RB2WORK_SPACE_9  OFF     0
DEFSIG_O IBS_SLA_ERR     OFF     0
DEFSIG_O MECHA_WARNING   OFF     0
DEFSIG_O AUTOSAVE_WA     OFF     0
DEFSIG_O MTN_CHECK       OFF     0
RMTOUT        0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0          -1
RMTIN         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0          -1
FIBUS_MASTER    0
FIBUS_SLAVE     4
CONFIGVISION    0   0
ARM_OX_TOP            1
ARM_OX_NUM            0
ARM_WX_TOP         1001
ARM_WX_NUM            0
CHECK_SPEED2     10.000    20.000    30.000
MTNCHK_KEYS   OFF OFF
SYS_BASE          0.000     0.000     0.000     0.000     0.000     0.000
TOOL              0.000     0.000     0.000     0.000     0.000     0.000
FTOOL             0.000     0.000     0.000     0.000     0.000     0.000
DFF               3.000     0.000     0.000     0.000     0.000     0.000     0.000
SETSIO             9600         2
PROTOCOL          5.000     5.000     5.000         1         1         1
SET2SIO            9600         2
SETOUTDA[1]   3000 8 1 10.0 0.0 0 0 0 0 0
SETOUTDA[2]   3000 8 1 10.0 0.0 0 0 0 0 0
SETOUTDA[3]   3000 8 1 10.0 0.0 0 0 0 0 0
SETOUTDA[4]   3000 8 1 10.0 0.0 0 0 0 0 0
SETOUTDA[5]   3000 8 1 10.0 0.0 0 0 0 0 0
SETOUTDA[6]   3000 8 1 10.0 0.0 0 0 0 0 0
SETOUTDA[7]   3000 8 1 10.0 0.0 0 0 0 0 0
SETOUTDA[8]   3000 8 1 10.0 0.0 0 0 0 0 0
SETOUTDA[9]   3000 8 1 10.0 0.0 0 0 0 0 0
SETOUTDA[10]  3000 8 1 10.0 0.0 0 0 0 0 0
ARMPROTOCOL        5000       100         3
SCSETSIO           9600         0
SCSETSIO7          9600         0
SCPROTOCOL           50        20         3
SCPROTOCOL7          50        20         3
SC_TOP_CODE           0         0         0         0         0         0         0         0         0         0         0         0         0         0         0
SC_END_CODE           0         0         0         0         0         0         0         0         0         0         0         0         0         0         0
SC_TOP_CODE7          0         0         0         0         0         0         0         0         0         0         0         0         0         0         0
SC_END_CODE7          0         0         0         0         0         0         0         0         0         0         0         0         0         0         0
SETCOMMODE            0         0
SIOTBL_SIG          128       128       128       128        64        64        64        64        64        64       128        16        16         0        16        16        80        24         8
SIOTBL_HEAD           1      1001       301      1301       501      1501       601      1601       729      1729      2301      2501      2601         0      2701      2801      2901       451      1451
SIOTBL_DATA           0         4         8        12        16        20        24        28        64        68        32        36        40        -1        44        48        52        56        60
SIOTBL_OFF           72
DEFAULT_DEVICE    0
FD_VERIFY       1
CARD_VERIFY     0
PSB_FANCTL            1        30        30
ERRLOG_SIGNO          0         0         0         0         0         0         0         0
OPLOG_SIGNO           0         0         0         0         0         0         0         0
ERRLOG_FLTNO     -31027    -31135         0         0         0         0         0         0         0         0
ZELOG_DEBUG           0
USR_P_LEVEL     0   0
LSQ_CYCMAX         1000
ZAUTOSCDL[1]    0   0   0   0
ZAUTOCMND[1] 
ZSAVECNFG[1] 0 0      
ZAUTOSCDL[2]    0   0   0   0
ZAUTOCMND[2] 
ZSAVECNFG[2] 0 0      
ZAUTOSCDL[3]    0   0   0   0
ZAUTOCMND[3] 
ZSAVECNFG[3] 0 0      
SWITCH CHECK.HOLD      OFF
SWITCH CP              ON 
SWITCH CYCLE.STOP      OFF
SWITCH OX.PREOUT       ON 
SWITCH PREFETCH.SIGINS OFF
SWITCH QTOOL           ON 
SWITCH REP_ONCE        OFF
SWITCH RPS             OFF
SWITCH STP_ONCE        OFF
SWITCH AFTER.WAIT.TMR  OFF
SWITCH FLEXCOMP        OFF
SWITCH SPOT_OP         OFF
SWITCH MESSAGES        ON 
SWITCH SCREEN          ON 
SWITCH AUTOSTART.PC    ON 
SWITCH AUTOSTART2.PC   OFF
SWITCH AUTOSTART3.PC   OFF
SWITCH AUTOSTART4.PC   OFF
SWITCH AUTOSTART5.PC   OFF
SWITCH ERRSTART.PC     OFF
SWITCH DISPIO_01       OFF
SWITCH HOLD.STEP       OFF
SWITCH WS_COMPOFF      OFF
SWITCH WS.ZERO         OFF
SWITCH SLOW_START      OFF
SWITCH ABS.SPEED       OFF
SWITCH UDP_EMSG        ON 
SWITCH TOUCH.ENA       ON 
SWITCH PLC.CHECK       OFF
SWITCH FLOWRATE        OFF
SWITCH FLOWRATE2       OFF
SWITCH FLOWRATE3       OFF
SWITCH FLOWRATE4       OFF
SWITCH TPSPEED.RESET   OFF
.END
.AUXDATA
ROB_START_LIM      0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000
ROB_START_LIM1      2.000     2.000     2.000     2.000     2.000     2.000     0.100     0.100     0.100     0.100     0.100     0.100     0.100     0.100     0.100     0.100     0.100     0.100
FTOOL1            0.000     0.000     0.000     0.000     0.000     0.000
FTOOL2            0.000     0.000     0.000     0.000     0.000     0.000
FTOOL3            0.000     0.000     0.000     0.000     0.000     0.000
FTOOL4            0.000     0.000     0.000     0.000     0.000     0.000
FTOOL5            0.000     0.000     0.000     0.000     0.000     0.000
FTOOL6            0.000     0.000     0.000     0.000     0.000     0.000
FTOOL7            0.000     0.000     0.000     0.000     0.000     0.000
FTOOL8            0.000     0.000     0.000     0.000     0.000     0.000
FTOOL9            0.000     0.000     0.000     0.000     0.000     0.000
TOOL1             0.000     0.000     0.000     0.000     0.000     0.000
DFF1              3.000     0.000     0.000     0.000
TOOL2             0.000     0.000     0.000     0.000     0.000     0.000
DFF2              3.000     0.000     0.000     0.000
TOOL3             0.000     0.000     0.000     0.000     0.000     0.000
DFF3              3.000     0.000     0.000     0.000
TOOL4             0.000     0.000     0.000     0.000     0.000     0.000
DFF4              3.000     0.000     0.000     0.000
TOOL5             0.000     0.000     0.000     0.000     0.000     0.000
DFF5              3.000     0.000     0.000     0.000
TOOL6             0.000     0.000     0.000     0.000     0.000     0.000
DFF6              3.000     0.000     0.000     0.000
TOOL7             0.000     0.000     0.000     0.000     0.000     0.000
DFF7              3.000     0.000     0.000     0.000
TOOL8             0.000     0.000     0.000     0.000     0.000     0.000
DFF8              3.000     0.000     0.000     0.000
TOOL9             0.000     0.000     0.000     0.000     0.000     0.000
DFF9              3.000     0.000     0.000     0.000
WORK1             0.000     0.000     0.000     0.000     0.000     0.000
WORK2             0.000     0.000     0.000     0.000     0.000     0.000
WORK3             0.000     0.000     0.000     0.000     0.000     0.000
WORK4             0.000     0.000     0.000     0.000     0.000     0.000
WORK5             0.000     0.000     0.000     0.000     0.000     0.000
WORK6             0.000     0.000     0.000     0.000     0.000     0.000
WORK7             0.000     0.000     0.000     0.000     0.000     0.000
WORK8             0.000     0.000     0.000     0.000     0.000     0.000
WORK9             0.000     0.000     0.000     0.000     0.000     0.000
UP-LIM           15.000   150.000   120.000   360.000   118.000   360.000    10.000    10.000    10.000    10.000    10.000    10.000    10.000    10.000    10.000    10.000    10.000    10.000
LO-LIM         -160.000   -60.000  -150.000  -360.000  -118.000  -360.000   -10.000   -10.000   -10.000   -10.000   -10.000   -10.000   -10.000   -10.000   -10.000   -10.000   -10.000   -10.000
ACCUR             1.000    10.000    50.000   100.000
SPEED            10.000    20.000    30.000    40.000    50.000    60.000    70.000    80.000    90.000   100.000
ACCEL           100.000   100.000   100.000   100.000   100.000   100.000   100.000   100.000   100.000   100.000
DECEL           100.000   100.000   100.000   100.000   100.000   100.000   100.000   100.000   100.000   100.000
SLOW_REPEAT      10.000
CHECK_SPEED      10.000    80.000   150.000
TEACH_SPEED      10.000    80.000   250.000     0.016
TIMER             0.000     0.100     0.200     0.300     0.400     0.500     0.600     0.700     0.800     0.900
SENSING_SPEED     10.000     0.000 255
FLOWGAIN        100.000
FLOWGAIN2       100.000
FLOWGAIN3       100.000
FLOWGAIN4       100.000
LINEAR1           0.00     0.50     1.00     1.50     2.00     2.50     3.00     3.50     4.00     4.50     5.00     5.50     6.00     6.50     7.00     7.50     8.00     8.50     9.00     9.50    10.00
LINEAR2              0     1500     3000     4500     6000     7500     9000    10500    12000    13500    15000    16500    18000    19500    21000    22500    24000    25500    27000    28500    30000
LINEAR1_2         0.00     0.50     1.00     1.50     2.00     2.50     3.00     3.50     4.00     4.50     5.00     5.50     6.00     6.50     7.00     7.50     8.00     8.50     9.00     9.50    10.00
LINEAR2_2            0     1500     3000     4500     6000     7500     9000    10500    12000    13500    15000    16500    18000    19500    21000    22500    24000    25500    27000    28500    30000
LINEAR1_3         0.00     0.50     1.00     1.50     2.00     2.50     3.00     3.50     4.00     4.50     5.00     5.50     6.00     6.50     7.00     7.50     8.00     8.50     9.00     9.50    10.00
LINEAR2_3            0     1500     3000     4500     6000     7500     9000    10500    12000    13500    15000    16500    18000    19500    21000    22500    24000    25500    27000    28500    30000
LINEAR1_4         0.00     0.50     1.00     1.50     2.00     2.50     3.00     3.50     4.00     4.50     5.00     5.50     6.00     6.50     7.00     7.50     8.00     8.50     9.00     9.50    10.00
LINEAR2_4            0     1500     3000     4500     6000     7500     9000    10500    12000    13500    15000    16500    18000    19500    21000    22500    24000    25500    27000    28500    30000
OUTSPED           0.00  2000.00    10.00     0.00      0 3000   8   1      0 0
OUTSPED2          0.00  2000.00    10.00     0.00      0 3000   8   1      0 0
OUTSPED3          0.00  2000.00    10.00     0.00      0 3000   8   1      0 0
OUTSPED4          0.00  2000.00    10.00     0.00      0 3000   8   1      0 0
1HOME          -126.072   -49.746   -48.113   327.632    12.637  -216.679     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     7.000
2HOME             0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000    10.000
WORK_SPACE_1    700.000   700.000   360.000  -710.000  -700.000  -360.000        -1
WORK_SPACE_2      0.000     0.000     0.000     0.000     0.000     0.000         0
WORK_SPACE_3      0.000     0.000     0.000     0.000     0.000     0.000         0
WORK_SPACE_4      0.000     0.000     0.000     0.000     0.000     0.000         0
WORK_SPACE_5      0.000     0.000     0.000     0.000     0.000     0.000         0
WORK_SPACE_6      0.000     0.000     0.000     0.000     0.000     0.000         0
WORK_SPACE_7      0.000     0.000     0.000     0.000     0.000     0.000         0
WORK_SPACE_8      0.000     0.000     0.000     0.000     0.000     0.000         0
WORK_SPACE_9      0.000     0.000     0.000     0.000     0.000     0.000         0
OUTFLOW_HSPARA[1]       0      0      0      0      0      0      0      0
OUTFLOW_HSPARA[2]       0      0      0      0      0      0      0      0
CL_APPLI        2   0   0   0   0   0   0   0
CL_CND[1]     0.000 0.300   2 PG90
CL_CND[2]     0.000 0.300   3 PG90
CL_CND[3]     0.000 0.300   3 PG90
CL_CND[4]     0.000 0.300   4 PG90
CL_CND[5]     0.000 0.300   5 PG90
CL_CND[6]     0.000 0.300   6 PG90
CL_CND[7]     0.000 0.300   7 PG90
CL_CND[8]     0.000 0.300   8 PG90
CL_CND[9]     0.000 0.300   1 PG90
BEADCC             0.0      0.0      0.0      0.0      0.0      0.0      0.0      0.0      0.0      0.0
CL_CND_GCLO     0.00   0.00   0.00   0.00   0.00   0.00   0.00   0.00   0.00
CL_CND_GDT      0.00   0.00   0.00   0.00   0.00   0.00   0.00   0.00   0.00
CL_CND_T3     0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
BEADPAR       0.0 100.0 100.0 100.0 100.0 100.0 100.0 100.0 100.0 100.0
OUTSPFLG      0 0 0 0 0 0 0 0 0 0
CL_SPW[1]       1    22     0     0     0     0     0     0
CL_SPW[2]       1    22     0     0     0     0     0     0
CL_SPW[3]       1    22     0     0     0     0     0     0
CL_SPW[4]       1    22     0     0     0     0     0     0
CL_SPW[5]       1    22     0     0     0     0     0     0
CL_SPW[6]       1    22     0     0     0     0     0     0
CL_SPW[7]       1    22     0     0     0     0     0     0
CL_SPW[8]       1    22     0     0     0     0     0     0
SPW_CTRL[1]      23  0.000    17     4   0  1029   3     0     0
SPW_CTRL[2]      23  0.000    17     4   0  1029   3     0     0
SPW_CTRL[3]      23  0.000    17     4   0  1029   3     0     0
SPW_CTRL[4]      23  0.000    17     4   0  1029   3     0     0
SPW_CTRL[5]      23  0.000    17     4   0  1029   3     0     0
SPW_CTRL[6]      23  0.000    17     4   0  1029   3     0     0
SPW_CTRL[7]      23  0.000    17     4   0  1029   3     0     0
SPW_CTRL[8]      23  0.000    17     4   0  1029   3     0     0
SPW_GUN[1]      1   0  0.500  1.000   0   0  0.500  0.200
SPW_GUN[2]      1   0  0.500  1.000   0   0  0.500  0.200
SPW_GUN[3]      1   0  0.500  1.000   0   0  0.500  0.200
SPW_GUN[4]      1   0  0.500  1.000   0   0  0.500  0.200
SPW_GUN[5]      1   0  0.500  1.000   0   0  0.500  0.200
SPW_GUN[6]      1   0  0.500  1.000   0   0  0.500  0.200
SPW_GUN[7]      1   0  0.500  1.000   0   0  0.500  0.200
SPW_GUN[8]      1   0  0.500  1.000   0   0  0.500  0.200
CL_HDL[1]        10    11
CL_HDL[2]        18     0
CL_HDL[3]        19     0
CL_HDL[4]        11    12
CL_HDL[5]         9     0
CL_HDL[6]        24     0
CL_HDL[7]        24     0
CL_HDL[8]        24     0
CL_GUN[1]         9
CL_GUN[2]        10
CL_GUN[3]         0
CL_GUN[4]         0
AUXACCEL        0
OX_SPEC_1      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
OX_SPEC_2      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
INSPECTION     0 -1 -1 -1 -1
DCOLT            200    240    190    100    100    100      0      0      0      0      0      0      0      0      0      0      0      0
DCOLTSW       255
DCOLTJ            10     10     10     20     20     30      0      0      0      0      0      0      0      0      0      0      0      0
DCOLTJSW      255
DCOLR            115    156    220     50    435    361      0      0      0      0      0      0      0      0      0      0      0      0
DCOLRSW       255
DCOLRJ            10     10     10     20     20     30      0      0      0      0      0      0      0      0      0      0      0      0
DCOLRJSW      255
LOAD1             3.000     0.000     0.000     0.000     0.000     0.000     0.000
LOAD2             3.000     0.000     0.000     0.000     0.000     0.000     0.000
LOAD3             3.000     0.000     0.000     0.000     0.000     0.000     0.000
LOAD4             3.000     0.000     0.000     0.000     0.000     0.000     0.000
LOAD5             3.000     0.000     0.000     0.000     0.000     0.000     0.000
LOAD6             3.000     0.000     0.000     0.000     0.000     0.000     0.000
LOAD7             3.000     0.000     0.000     0.000     0.000     0.000     0.000
LOAD8             3.000     0.000     0.000     0.000     0.000     0.000     0.000
LOAD9             3.000     0.000     0.000     0.000     0.000     0.000     0.000
ARM_LOAD          1.000     0.000
BASE_LOAD         0.000     0.000     0.000     0.000     0.000
RIO_PLC        0  0  0  0  1  0  0
RIO_WELD       0  0  0
AUX_PASSWD      2
AUX_CHOOSE1   2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
AUX_CHOOSE2   2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
AUX_CHOOSE3   2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
AUX_CHOOSE4   2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
AUX_CHOOSE5   2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
AUX_CHOOSE6   2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
AUX_CHOOSE7   2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
AUX_CHOOSE8   1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1
AUX_FNC_OPLVL1    2   2   2
AUX_FNC_OPLVL2    2
AUX_FNC_OPLVL3    2   2
AUX_FNC_OPLVL4    2   2   2   2   2   2
SLOW_REPEAT_TIM          0
ROB_START_POS_LIM      0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000     0.000
DCOLRTH1          0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0
DCOLRTH2          0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0
DCOLRTH3          0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0
DCOLRTH4          0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0
DCOLRTH5          0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0
DCOLRTH6          0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0
DCOLRTH7          0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0
DCOLRTH8          0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0
DCOLRTH9          0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0
DCOLJTH1          0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0
DCOLJTH2          0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0
DCOLJTH3          0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0
DCOLJTH4          0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0
DCOLJTH5          0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0
DCOLJTH6          0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0
DCOLJTH7          0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0
DCOLJTH8          0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0
DCOLJTH9          0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0
DCOLHJID1         0
DCOLHJID2         0
DCOLHJID3         0
DCOLHJID4         0
DCOLHJID5         0
DCOLHJID6         0
DCOLHJID7         0
DCOLHJID8         0
DCOLHJID9         0
.END
.SIG_COMMENT
.END
.PROGRAM udp_robot1()
	; *******************************************************************
	;
	; Program:      udp_robot1
	; Comment:
	; Author:       Shiyar Jamo | Coder Shiyar HHS Delft
	;
	; Date:         5/27/2024
	;
	; *******************************************************************
	;
	timeout = 120
	answer_timeout = 3
	ip[1] = 192
	ip[2] = 168
	ip[3] = 0
	ip[4] = 10
	port = 10010
	numbytes = 1
	ret = 0
	WHILE TRUE DO
		TWAIT 1
		UDP_RECVFROM ret, port, $cnt[0], numbytes, timeout, ip[1]
		IF ret <> 0 THEN
			PRINT "No data received within timeout period or error code: ", ret
			; Continue to the next iteration without halting
		ELSE
			PRINT "Message: ", $cnt[0]
			IF $cnt[0] == "0" THEN
				PRINT "IT IS 0"
			END
			IF $cnt[0] == "1" THEN
				PRINT "IT IS 1, Dance Mode robot 1"
				SPEED 80 ALWAYS
				ACCURACY 20 ALWAYS
				ACCEL 100 ALWAYS
				DECEL 100 ALWAYS
				PRINT "IT IS 1, Dance Mode robot 1"
				SPEED 50 ALWAYS
				FOR .i = 1 TO 2
					JMOVE #[0, -35, 0, 0, 45, -45]; Second move, it moves left on our look
					JMOVE #[0, -35, -70, 0, -45, 45]; 3 move, it moves join 3 like saying hello
				END
				JMOVE #[0, -35, 0, 0, 0, 0]; Second move, it moves left on our look
				SPEED 60 ALWAYS
				JMOVE #[-43.311, 65.532, 0, 0, 0, 0]; 5 move, it moves to back a little bit
				JMOVE #[-125.48, 63.402, 0, 0, 0, 0]; 6 move, it moves to back a little bit
				SPEED 100 ALWAYS
				JMOVE #[-20.813, 27.551, 0, 0, 0, 0]
				SPEED 57 ALWAYS
				JMOVE #[-66.735, 84.717, -2.286, -0.365, -23.469, 0.002]
				JMOVE #[-81.493, 44.063, -21.355, -0.365, -23.469, 0.001]
				JMOVE #[-96.563, 99.333, -2.368, -0.365, -23.469, 0.002]
				JMOVE #[-104.07, 53.074, -3.346, 33.003, -2.569, 0.002]
				JMOVE #[-119.15, 106.46, 9.61, -97.724, -2.569, 0.002]
				JMOVE #[-129.03, 53.913, 0, 0, -36.67, 0]
				SPEED 15 ALWAYS
				JMOVE #[-50.175, 53.913, 0, 0, -36.67, 0]
				JMOVE #[-129.03, 53.913, 0, 0, -36.67, 0]
				JMOVE #[-50.175, 53.913, 0, 0, -36.67, 0]
				; 25 SECONDS INTO VIDEO
				SPEED 70 ALWAYS
				JMOVE #[-62.919, 53.913, 26.726, 0, 0, 0]
				JMOVE #[-72.579, 76.125, -18.416, -90, 0, 0]
				JMOVE #[-84.607, 53.913, 26.726, 0, 0, 0]
				JMOVE #[-96.579, 76.125, -18.416, -90, 0, 0]
				JMOVE #[-108.61, 53.913, 26.726, 0, 0, 0]
				JMOVE #[-120.58, 76.125, -18.416, -90, 0, 0]
				JMOVE #[-108.61, 53.913, 26.726, 0, 0, 0]
				JMOVE #[-96.579, 76.125, -18.416, -90, 0, 0]
				JMOVE #[-84.607, 53.913, 26.726, 0, 0, 0]
				JMOVE #[-72.579, 76.125, -18.416, -90, 0, 0]
				JMOVE #[-62.919, 53.913, 26.726, 0, 0, 0]
				; 30 SECONDS IN
				SPEED 53 ALWAYS
				FOR .i = 1 TO 4
					JMOVE #[-90, 70, -45, 0, 0, 0]
					JMOVE #[-90, 50, 35, 0, 0, 0]
				END
				; FINAL MOTION
				TWAIT 3
				JMOVE #[-50.175, 53.913, -5, 0, 0, 15]
				JMOVE #[-50.175, 53.913, -10, 0, 0, 30]
				JMOVE #[-50.175, 53.913, -15, 0, 0, 45]
				JMOVE #[-50.175, 53.913, -20, 0, 0, 30]
				JMOVE #[-50.175, 53.913, -25, 0, 0, 15]
				JMOVE #[-50.175, 53.913, -30, 0, 0, 30]
				JMOVE #[-50.175, 53.913, -35, 0, 0, 45]
				JMOVE #[-50.175, 53.913, -40, 0, 0, 30]
				JMOVE #[-50.175, 53.913, -45, 0, 0, 15]
				TWAIT 0.25
				JMOVE #[-50.175, 53.913, -40, 0, 0, 30]
				JMOVE #[-50.175, 53.913, -35, 0, 0, 45]
				JMOVE #[-50.175, 53.913, -30, 0, 0, 30]
				JMOVE #[-50.175, 53.913, -25, 0, 0, 15]
				JMOVE #[-50.175, 53.913, -20, 0, 0, 0]
			END
			IF $cnt[0] == "3" THEN
				PRINT "IT IS 3 tv mode"
				SPEED 100 ALWAYS
				JMOVE #[-160, -2.405, -3.441, 100.64, 87.897, 184.07]
			END
			IF $cnt[0] == "4" THEN
				SPEED 50 ALWAYS
				PRINT "IT IS 4 detection people mode"
				JMOVE #[-65.05, 6.617, -91.223, 90.552, -2.919, 92.648]
			END
			IF $cnt[0] == "5" THEN
				SPEED 60 ALWAYS
				PRINT "IT IS 5 detection emotion mode"
				JMOVE #[-95.996, 7.024, -11.651, 90.415, 1.545, 269.54]
				JMOVE #[-77.661, 16.977, -37.075, 93.348, 15.48, 262.94]
				JMOVE #[-98.411, 28.083, -50.928, 93.348, -3.589, 167.6]
				JMOVE #[-69.702, 33.844, -55.492, 89.682, -3.589, 114.79]
				JMOVE #[-69.701, 60.146, -25.016, 89.682, -3.589, 94.99]; end point
			END
			; send confirmation message
			$cnt[0] = $ENCODE (/D, numbytes)
			UDP_SENDTO ret, ip[1], port, $cnt[0], 1, answer_timeout
			IF ret <> 0 THEN
				PRINT "Error with the UDP send, code: ", ret
				; Optionally handle send error but do not halt
			END
		END
	END
.END
.PROGRAM udp_robot2() ;
	; *******************************************************************
	;
	; Program:      udp_robot1
	; Comment:
	; Author:       Shiyar Jamo | Coder Shiyar HHS Delft
	;
	; Date:         5/27/2024
	;
	; *******************************************************************
	;
	timeout = 120
	answer_timeout = 3
	ip[1] = 192
	ip[2] = 168
	ip[3] = 0
	ip[4] = 10
	port = 10010
	numbytes = 1
	ret = 0
	WHILE TRUE DO
		TWAIT 1
		UDP_RECVFROM ret, port, $cnt[0], numbytes, timeout, ip[1]
		IF ret <> 0 THEN
			PRINT "No data received within timeout period or error code: ", ret
			; Continue to the next iteration without halting
		ELSE
			PRINT "Message: ", $cnt[0]
			IF $cnt[0] == "0" THEN
				PRINT "IT IS 0, Hello Mode"
				SPEED 70 ALWAYS
				FOR .i = 1 TO 2
					JMOVE #[0, 26, 0, 0, -90, 0]
					JMOVE #[0, -26, 0, 0, -90, 0]
				END
			END
			IF $cnt[0] == "1" THEN
				PRINT "IT IS 1, Dance Mode robot 2"
				SPEED 3 S
				FOR .i = 1 TO 4
					JMOVE #[55, 71, 0, 0, 0, 45]
					JMOVE #[80, 28, 0, 0, 0, -45]
					JMOVE #[40, 71, 0, 0, 0, 45]
					JMOVE #[120, 48, 0, 0, 0, -45]
					JMOVE #[55, 71, 0, 0, 0, 45]
					JMOVE #[20, 48, 0, 0, 0, 45]
				END
			END
			IF $cnt[0] == "3" THEN
				SPEED 100 ALWAYS
				JMOVE #[160, -0.114, 0.003, 0.001, -0.001, -0.002]
				PRINT "IT IS 3, tv mode"
			END
			IF $cnt[0] == "2" THEN
				PRINT "IT IS 2, game mode"
				SPEED 100 ALWAYS
				;JMOVE #[0, 0, 0, 0, 0, 0]
				FOR .i = 1 TO 3
					JMOVE #[63.168, 64.145, 0.003, 0.001, 0, -0.002]
					;TWAIT 1
					JMOVE #[63.168, 90.26, 0.003, 0.001, -0.001, -0.002]
				END
				PRINT " MOVING END"
			END
			; send confirmation message
			$cnt[0] = $ENCODE (/D, numbytes)
			UDP_SENDTO ret, ip[1], port, $cnt[0], 1, answer_timeout
			IF ret <> 0 THEN
				PRINT "Error with the UDP send, code: ", ret
				; Optionally handle send error but do not halt
			END
		END
	END
.END
.PROGRAM closeconnection()
	; *******************************************************************
	;
	; Program:      closeconnection
	; Comment:
	; Author:       Shiyar Jamo | codershiyar.com
	;
	; Date:         5/15/2024
	;
	; *******************************************************************
	;
	ret = 0
	IF sock_id1 >= 0 THEN
		TCP_CLOSE ret, sock_id1
	END
	IF ret < 0 THEN
		PRINT "TCP_CLOSE error id = ", sock_id1
	ELSE
		PRINT "TCP_CLOSE OK id = ", sock_id1
	END
.END
.PROGRAM connect_to_pc()
	timeout = 60
	ip[1] = 192
	ip[2] = 168
	ip[3] = 0
	ip[4] = 2  ; PC's IP address
	port = 10010
	numbytes = 1
	ret = 0
	;  UDP_SENDTO ret,ip[1],10003, "a", 1, 5
	;  IF ret<>0 THEN
	;    TYPE “ERROR!�
	;    HALT
	;  END
	WHILE TRUE DO
		TWAIT 3
		UDP_RECVFROM ret, port, $cnt[0], numbytes, timeout, ip[1]
		IF ret <> 0 THEN
			PRINT "Error with the UDP Recovery, code: ", ret
			HALT
		END
		PRINT "Message: ", $cnt[0]
	END
.END
.PROGRAM dance1()
	; *******************************************************************
	;
	; Program:      dance1
	; Comment:
	; Author:       User
	;
	; Date:         5/30/2024
	;
	; *******************************************************************
	;
	SPEED 80 ALWAYS
	ACCURACY 20 ALWAYS
	ACCEL 100 ALWAYS
	DECEL 100 ALWAYS
	PRINT "IT IS 1, Dance Mode robot 1"
	JMOVE #[0, 0, 0, 0, 0, 0]; Start Position
	TWAIT 1
	SPEED 50 ALWAYS
	FOR .i = 1 TO 2
		JMOVE #[0, -35, 0, 0, 45, -45]; Second move, it moves left on our look
		JMOVE #[0, -35, -70, 0, -45, 45]; 3 move, it moves join 3 like saying hello
	END
	JMOVE #[0, -35, 0, 0, 0, 0]; Second move, it moves left on our look
	SPEED 60 ALWAYS
	JMOVE #[-43.311, 65.532, 0, 0, 0, 0]; 5 move, it moves to back a little bit
	JMOVE #[-125.48, 63.402, 0, 0, 0, 0]; 6 move, it moves to back a little bit
	SPEED 100 ALWAYS
	JMOVE #[-20.813, 27.551, 0, 0, 0, 0]
	SPEED 57 ALWAYS
	JMOVE #[-66.735, 84.717, -2.286, -0.365, -23.469, 0.002]
	JMOVE #[-81.493, 44.063, -21.355, -0.365, -23.469, 0.001]
	JMOVE #[-96.563, 99.333, -2.368, -0.365, -23.469, 0.002]
	JMOVE #[-104.07, 53.074, -3.346, 33.003, -2.569, 0.002]
	JMOVE #[-119.15, 106.46, 9.61, -97.724, -2.569, 0.002]
	JMOVE #[-129.03, 53.913, 0, 0, -36.67, 0]
	SPEED 15 ALWAYS
	JMOVE #[-50.175, 53.913, 0, 0, -36.67, 0]
	JMOVE #[-129.03, 53.913, 0, 0, -36.67, 0]
	JMOVE #[-50.175, 53.913, 0, 0, -36.67, 0]
	; 25 SECONDS INTO VIDEO
	SPEED 70 ALWAYS
	JMOVE #[-62.919, 53.913, 26.726, 0, 0, 0]
	JMOVE #[-72.579, 76.125, -18.416, -90, 0, 0]
	JMOVE #[-84.607, 53.913, 26.726, 0, 0, 0]
	JMOVE #[-96.579, 76.125, -18.416, -90, 0, 0]
	JMOVE #[-108.61, 53.913, 26.726, 0, 0, 0]
	JMOVE #[-120.58, 76.125, -18.416, -90, 0, 0]
	JMOVE #[-108.61, 53.913, 26.726, 0, 0, 0]
	JMOVE #[-96.579, 76.125, -18.416, -90, 0, 0]
	JMOVE #[-84.607, 53.913, 26.726, 0, 0, 0]
	JMOVE #[-72.579, 76.125, -18.416, -90, 0, 0]
	JMOVE #[-62.919, 53.913, 26.726, 0, 0, 0]
	; 30 SECONDS IN
	SPEED 53 ALWAYS
	FOR .i = 1 TO 4
		JMOVE #[-90, 70, -45, 0, 0, 0]
		JMOVE #[-90, 50, 35, 0, 0, 0]
	END
	; FINAL MOTION
	TWAIT 3
	JMOVE #[-50.175, 53.913, -5, 0, 0, 15]
	JMOVE #[-50.175, 53.913, -10, 0, 0, 30]
	JMOVE #[-50.175, 53.913, -15, 0, 0, 45]
	JMOVE #[-50.175, 53.913, -20, 0, 0, 30]
	JMOVE #[-50.175, 53.913, -25, 0, 0, 15]
	JMOVE #[-50.175, 53.913, -30, 0, 0, 30]
	JMOVE #[-50.175, 53.913, -35, 0, 0, 45]
	JMOVE #[-50.175, 53.913, -40, 0, 0, 30]
	JMOVE #[-50.175, 53.913, -45, 0, 0, 15]
	TWAIT 0.25
	JMOVE #[-50.175, 53.913, -40, 0, 0, 30]
	JMOVE #[-50.175, 53.913, -35, 0, 0, 45]
	JMOVE #[-50.175, 53.913, -30, 0, 0, 30]
	JMOVE #[-50.175, 53.913, -25, 0, 0, 15]
	JMOVE #[-50.175, 53.913, -20, 0, 0, 0]
	HALT
.END
.PROGRAM decode_traj_pt(.$full_message,.msg_id,.prog_speed,.prog_acc,.prog_accel,.prog_decel,.prog_break,.joint0,.joint1,.joint2,.joint3,.joint4,.joint5) ;
	;
	.$temp = $DECODE (.$full_message, "|", 1) ; remove seperator
	.$msg_id = $DECODE (.$full_message, "|", 0) ; read until next seperator
	.msg_id = VAL (.$msg_id)
	;
	IF NOT .msg_id == 11 AND NOT .msg_id == 12 THEN
		$shutdown_reason = "Trajectory decoding failed at ID"
		CALL shutdown_kawa
		RETURN
	END
	;
	.$temp = $DECODE (.$full_message, "|", 1)
	.$seq_num = $DECODE (.$full_message, "|", 0)
	.seq_num = VAL (.$seq_num)
	;
	IF NOT .seq_num == seq_num_old + 1 THEN
		$shutdown_reason = "Sequence number of received trajectory points mismatch. Expected:" + $ENCODE (seq_num_old) + " but got:" + $ENCODE (.seq_num)
		CALL shutdown_kawa
		RETURN
	ELSE
		seq_num_old = .seq_num
	END
	;
	.$temp = $DECODE (.$full_message, "|", 1)
	.$prog_speed = $DECODE (.$full_message, "|", 0)
	.prog_speed = VAL (.$prog_speed)
	;
	.$temp = $DECODE (.$full_message, "|", 1)
	.$prog_acc = $DECODE (.$full_message, "|", 0)
	.prog_acc = VAL (.$prog_acc)
	;
	.$temp = $DECODE (.$full_message, "|", 1)
	.$prog_accel = $DECODE (.$full_message, "|", 0)
	.prog_accel = VAL (.$prog_accel)
	;
	.$temp = $DECODE (.$full_message, "|", 1)
	.$prog_decel = $DECODE (.$full_message, "|", 0)
	.prog_decel = VAL (.$prog_decel)
	;
	.$temp = $DECODE (.$full_message, "|", 1)
	.$prog_break = $DECODE (.$full_message, "|", 0)
	.prog_break = VAL (.$prog_break)
	;
	.$temp = $DECODE (.$full_message, "|", 1)
	.$joint0 = $DECODE (.$full_message, "|", 0)
	.joint0 = VAL (.$joint0)
	;
	.$temp = $DECODE (.$full_message, "|", 1)
	.$joint1 = $DECODE (.$full_message, "|", 0)
	.joint1 = VAL (.$joint1)
	;
	.$temp = $DECODE (.$full_message, "|", 1)
	.$joint2 = $DECODE (.$full_message, "|", 0)
	.joint2 = VAL (.$joint2)
	;
	.$temp = $DECODE (.$full_message, "|", 1)
	.$joint3 = $DECODE (.$full_message, "|", 0)
	.joint3 = VAL (.$joint3)
	;
	.$temp = $DECODE (.$full_message, "|", 1)
	.$joint4 = $DECODE (.$full_message, "|", 0)
	.joint4 = VAL (.$joint4)
	;
	.$temp = $DECODE (.$full_message, "|", 1)
	.$joint5 = $DECODE (.$full_message, "|", 0)
	.joint5 = VAL (.$joint5)
	;
.END
.PROGRAM del_front_queue()
	; GOTO command is necessary because AS language does not support ifelse statements
	IF queue_front == 0 THEN ;Queue is empty, nothing to delete
		GOTO exit
	END
	IF queue_front == queue_rear AND queue_front != 0 THEN ; Queue has one object, reset queue
		queue_front = 0
		queue_rear = 0
		GOTO exit
	END
	IF queue_front == queue_size - 1 THEN ; Front is at the rear of the circular queue, Loop front pointer of queue back to the front of the circular queue
		queue_front = 1
		GOTO exit
	ELSE
		queue_front = queue_front + 1 ; Move front one back
		GOTO exit
	END
exit:
.END
.PROGRAM encode_pose(.$pose) ;
	HERE .#cp
	DECOMPOSE .cp[0] = .#cp
	.$s = "|"
	.$pose = $CHR (2) + $ENCODE (/L, .$s, .cp[0], .$s, .cp[1], .$s, .cp[2], .$s, .cp[3], .$s, .cp[4], .$s, .cp[5], .$s) + $CHR (3) + $CHR (10)
.END
.PROGRAM init() ; Initializing
	; *******************************************************************
	;
	; Program: init
	; Description: Initialize variables, global settings
	; Autor:
	;
	; Date:
	;
	; *******************************************************************
	;
	ACCURACY 200 ALWAYS                 ; Default accuracy
	ACCEL 100 ALWAYS                    ; Default Acceleration
	DECEL 100 ALWAYS                    ; Default Deceleration
	SPEED 20 ALWAYS                    ; Default Speed
	BASE mybase                         ; Default Base definition
	TOOL mytool                         ; Default tool definition
	ABS.SPEED OFF                       ; Switch off absolute speed
	;?PALMODE OFF                         ; Switch off palletizing mode
.END
.PROGRAM init_kawa()
	;Initiate driver
	ONE shutdown_kawa ;Calls program when error occurs
	keep_active_sig = 2010 ; Define signal number
	SIGNAL keep_active_sig ;Set signal to TRUE
	;Initiate movement pose queue
	queue_size = 50
	queue_front = 0
	queue_rear = 0
	;Initiate tcp string buffer
	$tcp_buffer = ""
	seq_num_old = 0
.END
.PROGRAM ins_rear_queue(.msg_id,.prog_speed,.prog_acc,.prog_accel,.prog_decel,.prog_break,.joint0,.joint1,.joint2,.joint3,.joint4,.joint5) ;
	; GOTO command is necessary because AS language does not support ifelse statements
	;
	IF queue_front == 1 AND queue_rear == queue_size - 1 OR queue_front == queue_rear + 1 THEN ;Queue is full, shutdown
		$shutdown_reason = "Queue overload"
		CALL shutdown_kawa
		RETURN
	END
	IF queue_rear == 0 THEN ; Queue is empty, set front and rear pointers
		queue_rear = queue_rear + 1
		queue_front = queue_front + 1
		GOTO add_queue
	END
	IF queue_rear == queue_size - 1 AND queue_front > 1 THEN ;if the rear queue pointer is at max size, loop to front
		queue_rear = 1
		GOTO add_queue
	ELSE ; Move the rear one back
		queue_rear = queue_rear + 1
		GOTO add_queue
	END
	;
add_queue:
	queue[queue_rear, 0] = .msg_id
	queue[queue_rear, 1] = .prog_speed
	queue[queue_rear, 2] = .prog_acc
	queue[queue_rear, 3] = .prog_accel
	queue[queue_rear, 4] = .prog_decel
	queue[queue_rear, 5] = .prog_break
	queue[queue_rear, 6] = .joint0
	queue[queue_rear, 7] = .joint1
	queue[queue_rear, 8] = .joint2
	queue[queue_rear, 9] = .joint3
	queue[queue_rear, 10] = .joint4
	queue[queue_rear, 11] = .joint5
	;
exit:
.END
.PROGRAM main() ; Main Program
	; *******************************************************************
	;
	; Program: main
	; Description: main program - call of all subprograms
	; Autor:
	;
	; Date:
	;
	; *******************************************************************
	;
	CALL init; Initialization of global variables
	CALL gohome; "safely" move to home position
	CALL work; Do the work (endless loop)
.END
.PROGRAM main_robot1()
  ; *******************************************************************
  ;
  ; Program:      main_robot1
  ; Comment:
  ; Author:       Shiyar Jamo | Coder Shiyar HHS Delft, Ixent Cornella | icorn1
  ;
  ; Date:         5/27/2024
  ;
  ; *******************************************************************
  ;
  timeout = 120
  answer_timeout = 3
  ip[1] = 192
  ip[2] = 168
  ip[3] = 0
  ip[4] = 10
  port = 10010
  numbytes = 1
  ret = 0
  WHILE TRUE DO
    TWAIT 1
    UDP_RECVFROM ret, port, $cnt[0], numbytes, timeout, ip[1]
    IF ret <> 0 THEN
      PRINT "No data received within timeout period or error code: ", ret
      ; Continue to the next iteration without halting
    ELSE
      PRINT "Message: ", $cnt[0]
      IF $cnt[0] == "0" THEN
        PRINT "IT IS 0"
      END
      IF $cnt[0] == "1" THEN
        PRINT "IT IS 1, Dance Mode robot 1"
        SPEED 80 ALWAYS
        ACCURACY 20 ALWAYS
        ACCEL 100 ALWAYS
        DECEL 100 ALWAYS
        PRINT "IT IS 1, Dance Mode robot 1"
        SPEED 50 ALWAYS
        FOR .i = 1 TO 2
          JMOVE #[0, -35, 0, 0, 45, -45]; Second move, it moves left on our look
          JMOVE #[0, -35, -70, 0, -45, 45]; 3 move, it moves join 3 like saying hello
        END
        JMOVE #[0, -35, 0, 0, 0, 0]; Second move, it moves left on our look
        SPEED 60 ALWAYS
        JMOVE #[-43.311, 65.532, 0, 0, 0, 0]; 5 move, it moves to back a little bit
        JMOVE #[-125.48, 63.402, 0, 0, 0, 0]; 6 move, it moves to back a little bit
        SPEED 100 ALWAYS
        JMOVE #[-20.813, 27.551, 0, 0, 0, 0]
        SPEED 57 ALWAYS
        JMOVE #[-66.735, 84.717, -2.286, -0.365, -23.469, 0.002]
        JMOVE #[-81.493, 44.063, -21.355, -0.365, -23.469, 0.001]
        JMOVE #[-96.563, 99.333, -2.368, -0.365, -23.469, 0.002]
        JMOVE #[-104.07, 53.074, -3.346, 33.003, -2.569, 0.002]
        JMOVE #[-119.15, 106.46, 9.61, -97.724, -2.569, 0.002]
        JMOVE #[-129.03, 53.913, 0, 0, -36.67, 0]
        SPEED 15 ALWAYS
        JMOVE #[-50.175, 53.913, 0, 0, -36.67, 0]
        JMOVE #[-129.03, 53.913, 0, 0, -36.67, 0]
        JMOVE #[-50.175, 53.913, 0, 0, -36.67, 0]
        ; 25 SECONDS INTO VIDEO
        SPEED 70 ALWAYS
        JMOVE #[-62.919, 53.913, 26.726, 0, 0, 0]
        JMOVE #[-72.579, 76.125, -18.416, -90, 0, 0]
        JMOVE #[-84.607, 53.913, 26.726, 0, 0, 0]
        JMOVE #[-96.579, 76.125, -18.416, -90, 0, 0]
        JMOVE #[-108.61, 53.913, 26.726, 0, 0, 0]
        JMOVE #[-120.58, 76.125, -18.416, -90, 0, 0]
        JMOVE #[-108.61, 53.913, 26.726, 0, 0, 0]
        JMOVE #[-96.579, 76.125, -18.416, -90, 0, 0]
        JMOVE #[-84.607, 53.913, 26.726, 0, 0, 0]
        JMOVE #[-72.579, 76.125, -18.416, -90, 0, 0]
        JMOVE #[-62.919, 53.913, 26.726, 0, 0, 0]
        ; 30 SECONDS IN
        SPEED 53 ALWAYS
        FOR .i = 1 TO 4
          JMOVE #[-90, 70, -45, 0, 0, 0]
          JMOVE #[-90, 50, 35, 0, 0, 0]
        END
        ; FINAL MOTION
        TWAIT 3
        JMOVE #[-50.175, 53.913, -5, 0, 0, 15]
        JMOVE #[-50.175, 53.913, -10, 0, 0, 30]
        JMOVE #[-50.175, 53.913, -15, 0, 0, 45]
        JMOVE #[-50.175, 53.913, -20, 0, 0, 30]
        JMOVE #[-50.175, 53.913, -25, 0, 0, 15]
        JMOVE #[-50.175, 53.913, -30, 0, 0, 30]
        JMOVE #[-50.175, 53.913, -35, 0, 0, 45]
        JMOVE #[-50.175, 53.913, -40, 0, 0, 30]
        JMOVE #[-50.175, 53.913, -45, 0, 0, 15]
        TWAIT 0.25
        JMOVE #[-50.175, 53.913, -40, 0, 0, 30]
        JMOVE #[-50.175, 53.913, -35, 0, 0, 45]
        JMOVE #[-50.175, 53.913, -30, 0, 0, 30]
        JMOVE #[-50.175, 53.913, -25, 0, 0, 15]
        JMOVE #[-50.175, 53.913, -20, 0, 0, 0]
      END
      IF $cnt[0] == "3" THEN
        PRINT "IT IS 3 tv mode"
        SPEED 100 ALWAYS
        JMOVE #[-160, -2.405, -3.441, 100.64, 87.897, 184.07]
      END
      IF $cnt[0] == "4" THEN
        SPEED 50 ALWAYS
        PRINT "IT IS 4 detection people mode"
        JMOVE #[-65.05, 6.617, -91.223, 90.552, -2.919, 92.648]
      END
      IF $cnt[0] == "5" THEN
        SPEED 60 ALWAYS
        PRINT "IT IS 5 detection emotion mode"
        JMOVE #[-95.996, 7.024, -11.651, 90.415, 1.545, 269.54]
        JMOVE #[-77.661, 16.977, -37.075, 93.348, 15.48, 262.94]
        JMOVE #[-98.411, 28.083, -50.928, 93.348, -3.589, 167.6]
        JMOVE #[-69.702, 33.844, -55.492, 89.682, -3.589, 114.79]
        JMOVE #[-69.701, 60.146, -25.016, 89.682, -3.589, 94.99]; end point
      END
      ; send confirmation message
      $cnt[0] = $ENCODE (/D, numbytes)
      UDP_SENDTO ret, ip[1], port, $cnt[0], 1, answer_timeout
      IF ret <> 0 THEN
        PRINT "Error with the UDP send, code: ", ret
        ; Optionally handle send error but do not halt
      END
    END
  END
.END
.PROGRAM move_backward()
	JMOVE #[33.924, 16.416, 17.475, 13.746, 8.05, 50.603]
.END
.PROGRAM move_kawa()
	$movement_state = "Initiating"
	.current_speed = 10 ;percentage of monitor speed
	.current_accurac = 2 ;Milimeters
	.current_deceler = 100 ;Percentage of max decel
	.current_acceler = 100 ;Percentage of max accel
	;
	WHILE SIG (keep_active_sig) DO
		$movement_state = "Waiting for trajectory point in queue"
		IF queue_front > 0 THEN
			;
			$movement_state = "Setting motion parameters"
			IF NOT queue[queue_front, 1] == .current_speed THEN
				.current_speed = queue[queue_front, 1]
				SPEED .current_speed ALWAYS
			END
			IF NOT queue[queue_front, 2] == .current_accurac THEN
				.current_accurac = queue[queue_front, 2]
				ACCURACY .current_accurac ALWAYS
			END
			IF NOT queue[queue_front, 3] == .current_deceler THEN
				.current_deceler = queue[queue_front, 3]
				DECEL .current_deceler ALWAYS
			END
			IF NOT queue[queue_front, 4] == .current_acceler THEN
				.current_acceler = queue[queue_front, 4]
				ACCEL .current_acceler ALWAYS
			END
			;
			IF queue[queue_front, 0] == 11 THEN
				POINT .#next_joint_posi = #PPOINT (queue[queue_front, 6], queue[queue_front, 7], queue[queue_front, 8], queue[queue_front, 9], queue[queue_front, 10], queue[queue_front, 11])
				JMOVE .#next_joint_posi
			END
			IF queue[queue_front, 0] == 12 THEN
				POINT .next_cartesian_ = TRANS (queue[queue_front, 6], queue[queue_front, 7], queue[queue_front, 8], queue[queue_front, 9], queue[queue_front, 10], queue[queue_front, 11])
				LMOVE .next_cartesian_
			END
			;
			IF queue[queue_front, 5] == 1 THEN
				BREAK
			END
			;
			$movement_state = "Deleting trajectory point from queue"
			CALL del_front_queue
		ELSE
			TWAIT 0.1
		END
	END
.END
.PROGRAM pg6668()
	JOINT SPEED9 ACCU1 TIMER0 TOOL1 WORK0 CLAMP1 (OFF,0,0,O) OX= WX= #[75.462,36.421,-20.625,13.75,8.0507,50.604]  ;
	JOINT SPEED9 ACCU1 TIMER0 TOOL1 WORK0 CLAMP1 (OFF,0,0,O) OX= WX= #[144.78,3.0253,-20.625,13.75,8.0507,50.603]   ;
	JOINT SPEED9 ACCU1 TIMER0 TOOL1 WORK0 CLAMP1 (OFF,0,0,O) OX= WX= #[-66.947,16.45,17.572,13.75,8.0507,50.603]  ;
.END
.PROGRAM read_tcp_buffer()
	;
	$read_tcp_buffer = "Initiating"
	;
	.$start_of_msg0 = $CHR (2)
	.$start_of_msg1 = $CHR (1)
	.$end_of_msg = $CHR (3)
	.$temp = "init"
	;
start:
	WHILE SIG (keep_active_sig) DO
		WAIT LEN ($tcp_buffer) > 0
		;PRINT "Message: ", $msg
		.$temp = $DECODE ($tcp_buffer, .$start_of_msg0, 0) ;Delete everything up to first start_of_message
		IF LEN ($tcp_buffer) > 0 THEN ;Check if TCP buffer is not empty, can be empty of no start_of_message available.
			.$temp = $DECODE ($tcp_buffer, "|", 0) ;Store characters upto seperator as variable
			.$seperator = $DECODE ($tcp_buffer, "|", 1) ;Remove pipe seperator
			IF .$temp == .$start_of_msg0 THEN ;Check if start_of_message was indeed found
				WAIT LEN ($tcp_buffer) > 2
				;PRINT "yes1!"
				.$temp = $DECODE ($tcp_buffer, "|", 0) ;Store characters upto seperator as variable
				.$seperator = $DECODE ($tcp_buffer, "|", 1) ;Remove pipe seperator
				IF .$temp == .$start_of_msg1 THEN ;Check if start_of_heading was found
					WAIT LEN ($tcp_buffer) > 3
					;PRINT "yes2!"
					.$temp = $DECODE ($tcp_buffer, "|", 0) ;Store characters upto seperator as variable
					.msg_length = VAL (.$temp)
					WAIT LEN ($tcp_buffer) >= .msg_length
					;print "Message length: ", .msg_length
					.$full_message = $DECODE ($tcp_buffer, .$end_of_msg, 0) ;store everything up to end_of_message
					;print .$full_message
					IF LEN (.$full_message) == (.msg_length - 1) THEN
						; print "YES!!!!!", .$full_message
						CALL decode_traj_pt (.$full_message, .msg_id, .prog_speed, .prog_acc, .prog_accel, .prog_decel, .prog_break, .joint0, .joint1, .joint2, .joint3, .joint4, .joint5)
						CALL ins_rear_queue (.msg_id, .prog_speed, .prog_acc, .prog_accel, .prog_decel, .prog_break, .joint0, .joint1, .joint2, .joint3, .joint4, .joint5)
					ELSE
						$read_tcp_buffer = "error"
						PRINT "oh no :( 3"
						;call shutdown error!
					END
				ELSE
					$read_tcp_buffer = "error"
					PRINT "oh no :( 2"
					;call shutdown error!
				END
			ELSE
				$read_tcp_buffer = "error"
				PRINT "oh no :( 1"
				;call shutdown error!
			END
		ELSE
			$read_tcp_buffer = "error"
			;print "TCP buffer empty!"
			TWAIT 0.5
		END
	END
.END
.PROGRAM receive_data()
	; *******************************************************************
	;
	; Program:      receive_data
	; Comment:
	; Author:       Shiyar Jamo
	;
	; Date:         5/15/2024
	;
	; *******************************************************************
	;
	WHILE TRUE DO
		numbytes = 10
		max_length = 10
		tout_rec = 60
		ret = 0
		TCP_RECV ret, sock_id1, $recv_buf[1], numbytes, tout_rec, max_length
		IF ret < 0 THEN
			PRINT "TCP_RECV error in RECV", ret
			$recv_buf[1] = "000"
		ELSE
			IF numbytes > 0 THEN
				;PRINT "TCP_RECV OK in RECV", ret
				FOR i = 1 TO numbytes
					PRINT "RecBuff[", i, "]= ", $recv_buf[i]
					IF $recv_buf[1] == "1" THEN
						PRINT "IT IS 1"
						SPEED 80 ALWAYS
						JMOVE #[-100, -59.995, 9.834, 13.745, 8.05, 50.603]
					END
					IF $recv_buf[1] == "2" THEN
						PRINT "IT IS 2"
						SPEED 100 ALWAYS
						JMOVE #[0, 0, 0, 0, 0, 0]
						FOR .i = 1 TO 3
							PRINT "Moving inside loop", .i, " from 5"
							JMOVE #[25.704, -50, 18.275, -18.404, -1.851, 9.318]
							;TWAIT 1
							JMOVE #[36.603, -60, 18.275, -18.404, 36.537, 151.41]
						END
					END
				END
			ELSE
				$recv_buf[1] = "000"
				ret = -1
			END
		END
	END
.END
.PROGRAM recv_tcp_serv() ;
	;
	$recv_tcp_serv_s = "0, initiating"
	PRINT $recv_tcp_serv_s
	.recv_port = 11112
	.timeout_recv = 0.01
	.num = 0
	.ret_listen = -1
	;.recv_sockid = -1
	$recv_tcp_serv_s = "Connecting on port " + $ENCODE (.recv_port)
	PRINT $recv_tcp_serv_s ;
	DO
		TCP_LISTEN .ret_listen, .recv_port
		IF .ret_listen < 0 THEN
			TWAIT 0.1
		END
	UNTIL .ret_listen >= 0
	;
	DO
		TCP_ACCEPT .recv_sockid, .recv_port, 1
	UNTIL .recv_sockid > 0
	;
	$recv_tcp_serv_s = "Connected and can start receiving poses through sockid: " + $ENCODE (.recv_sockid)
	PRINT $recv_tcp_serv_s;
	WHILE SIG (keep_active_sig) DO
		.num = 0
		TCP_RECV .ret, .recv_sockid, .$tcp_message[1], .num, .timeout_recv, 1
		;$recv_tcp_serv_state = "Current state tcp comms: " + $ERROR(.ret)
		IF .ret >= 0 THEN ;If we received stuff, add message to internal tcp_buffer
			IF .num > 0 THEN
				FOR .i = 1 TO .num
					$tcp_buffer = $tcp_buffer + .$tcp_message[.i]
				END
			END
		ELSE
			TWAIT 0.01
		END
	END
	$recv_tcp_serv_s = "Closing connection"
	PRINT $recv_tcp_serv_s
	TCP_CLOSE .ret, .recv_sockid
	IF .ret < 0 THEN
		$recv_tcp_serv_s = "Closing connection error: " + $ERROR (.ret)
		PRINT $recv_tcp_serv_s
		TCP_CLOSE .ret, .recv_sockid
	END
	TCP_END_LISTEN .ret, .recv_port
	$recv_tcp_serv_s = "Closed succesfully"
	PRINT $recv_tcp_serv_s
.END
.PROGRAM send()
	numbytes = 0
	max_length = 1
	tout_rec = 2
	ret = 0
	TCP_RECV ret, sock_id, $recv_buf[1], numbytes, tout_rec, max_length
	IF ret < 0 THEN
		PRINT "TCP_RECV error in RECV", ret
		$recv_buf[1] = "000"
	ELSE
		IF numbytes > 0 THEN
			PRINT "TCP_RECV OK in RECV", ret
			FOR i = 1 TO numbytes
				PRINT "RecBuff[", i, "]= ", $recv_buf[i]
			END
		ELSE
			$recv_buf[1] = "000"
			ret = -1
		END
	END
.END
.PROGRAM send_pos_serv()
	;
	$send_server_sta = "Initiating"
	.send_port = 11111
	.send_msgs_per_s = 10
	.timeout_recv = 0.1
	.num = 0
	.ret_listen = -1
	.ret_sockid = -1
	;
	$send_server_sta = "Listening on port " + $ENCODE (.send_port)
	;
	DO
		TCP_LISTEN .ret_listen, .send_port
		IF .ret_listen < 0 THEN
			TWAIT 0.1
		END
	UNTIL .ret_listen >= 0
	;
	DO
		TCP_ACCEPT .send_sockid, .send_port, 1
	UNTIL .send_sockid > 0
	;
	$send_server_sta = "Connected and can start sending current poses through sockid" + $ENCODE (.send_sockid)
	;
	WHILE SIG (keep_active_sig) DO
		CALL encode_pose (.$pose)
		.$send_buf[1] = .$pose
		tcp_send .ret, .send_sockid, .$send_buf[1], 1, .timeout_recv
		TWAIT (1 / .send_msgs_per_s)
	END
	;
	$send_server_sta = "Closing connection"
	;
	TCP_CLOSE .ret, .send_sockid
	IF .ret < 0 THEN
		$recv_tcp_serv_s = "Closing connection error: " + $ERROR (.ret)
		TCP_CLOSE .ret, .send_sockid
	END
	TCP_END_LISTEN .ret, .send_port
	;
.END
.PROGRAM shutdown_kawa() ;
	;$shutdown_reason = "Something went wrong :( ERROR"
	;PRINT $shutdown_reason
	;PRINT $recv_tcp_serv_state
	;PRINT $movement_state
	PRINT "Shutting down!"
	SIGNAL -keep_active_sig
.END
.PROGRAM smr2() ; created by Gulliermu and Shiyar
	tout_open = 60
	ip[1] = 192
	ip[2] = 168
	ip[3] = 0
	ip[4] = 2  ; PC's IP address
	port = 10001
	er_count = 0
connect:
	TIMER (2) = 0
	TCP_CONNECT sock_id1, port, ip[1], tout_open
	IF sock_id1 < 0 THEN
		er_count = er_count + 1
		IF er_count >= 5 THEN
			PRINT "Client Communication with PC has failed"
		ELSE
			PRINT "TCP_CONNECT error id = ", sock_id1, ", error count = ", er_count
			GOTO connect
		END
	ELSE
		PRINT "TCP_CONNECT OK id = ", sock_id1, ", with time elapsed = ", TIMER (2)
	END
.END
.PROGRAM smr2_recieve() ; created by Gulliermu and Shiyar
	ip[1] = 192
	ip[2] = 168
	ip[3] = 0
	ip[4] = 1  ; Robot's own IP address
	port = 10001
	tout_open = 60  ; Timeout in seconds
	er_count = 0
	client_ip[1] = 0
	client_ip[2] = 0
	client_ip[3] = 0
	client_ip[4] = 0  ; IP address of the connected client
listen:
	TIMER (1) = 0
	;?TCP_LISTEN sock_id, port, ip[1], tout_open
	IF sock_id < 0 THEN
		er_count = er_count + 1
		IF er_count >= 5 THEN
			PRINT "Server setup failed after multiple attempts"
		ELSE
			PRINT "TCP_LISTEN error id = ", sock_id, ", error count = ", er_count
			GOTO listen
		END
	ELSE
		PRINT "TCP_LISTEN OK, socket id = ", sock_id, ", with time elapsed = ", TIMER (1)
	END
	TCP_ACCEPT sock_id, client_ip[1], tout_open
	IF sock_id < 0 THEN
		PRINT "Acceptance Error"
		;?TCP_CLOSE sock_id
		GOTO listen
	ELSE
		PRINT "Client connected from ", client_ip[1], ".", client_ip[2], ".", client_ip[3], ".", client_ip[4]
	END
receive:
	;?STRING data[256]
	;?TCP_RECV sock_id, data, 256, tout_open
	;?IF LENGTH(data) == 0 THEN
	PRINT "No data received or connection closed by client"
	;?TCP_CLOSE sock_id
	GOTO listen
ELSE
	PRINT "Received data: ", data
END
;?TCP_CLOSE sock_id
PRINT "Connection closed, listening for new connection"
GOTO listen
.END
.PROGRAM speed_test1()
	; *******************************************************************
	;
	; Program:      speed_test1
	; Comment:
	; Author:       User
	;
	; Date:         5/31/2024
	;
	; *******************************************************************
	;
	SPEED 100 ALWAYS
	; JMOVE #[-90]
	;JMOVE #[]
	; JMOVE #[-90, 90]
	; JMOVE #[-90]
	JMOVE #[-90, 0, -90, 0, 0, 0]
	JMOVE #[-90, 0, 0, 0, 0, 0]
	JMOVE #[-90, 0, -90, 0, 0, 0]
	JMOVE #[-90, 0, 0, 0, 0, 0]
	JMOVE #[-90, 0, -90, 0, 0, 0]
	JMOVE #[-90, 0, 0, 0, 0, 0]
	JMOVE #[-90, 0, -90, 0, 0, 0]
	JMOVE #[-90, 0, 0, 0, 0, 0]
.END
.PROGRAM tcp_close2() ;
	ret = 0
	IF sock_id1 >= 0 THEN
		TCP_CLOSE ret, sock_id1
	END
	IF ret < 0 THEN
		PRINT "TCP_CLOSE error id = ", sock_id1
	ELSE
		PRINT "TCP_CLOSE OK id = ", sock_id1
	END
.END
.PROGRAM tcp_open1(.port) ;
	; *******************************************************************
	;
	; Program:      tcp_open
	; Comment:
	; Author:       User
	;
	; Date:         3/30/2022
	;
	; *******************************************************************
	;
	tout_open = 60
	ip[1] = 192
	ip[2] = 168
	ip[3] = 0
	ip[4] = 2
	port = .port
	.er_count = 0
connect:
	TIMER (2) = 0
	TCP_CONNECT sock_id1, port, ip[1], tout_open
	IF sock_id1 < 0 THEN
		IF .er_count >= 5 THEN
			PRINT "Client Communication with Cognex has failed"
			GOTO forgetit
		ELSE
			.er_count = .er_count + 1
			PRINT "TCP_CONNECT error id = ", sock_id1, " error count = ", .er_count
			GOTO connect
		END
	ELSE
		PRINT "TCP_CONNECT OK id = ", sock_id1, " with timep = ", TIMER (2)
	END
forgetit:
	RETURN
.END
.PROGRAM tcp_open_new(.port) ;
	; *******************************************************************
	;
	; Program:      tcp_open
	; Comment:
	; Author:       User
	;
	; Date:         3/30/2022
	;
	; *******************************************************************
	;
	tout_open = 60
	ip[1] = 192
	ip[2] = 168
	ip[3] = 0
	ip[4] = 2
	port = 23
	.er_count = 0
connect:
	TIMER (2) = 0
	TCP_CONNECT sock_id1, port, ip[1], tout_open
	IF sock_id1 < 0 THEN
		IF .er_count >= 5 THEN
			PRINT "Client Communication with Cognex has failed"
			GOTO forgetit
		ELSE
			.er_count = .er_count + 1
			PRINT "TCP_CONNECT error id = ", sock_id1, " error count = ", .er_count
			GOTO connect
		END
	ELSE
		PRINT "TCP_CONNECT OK id = ", sock_id1, " with timep = ", TIMER (2)
	END
forgetit:
	RETURN
.END
.PROGRAM tcp_recv1(.ret,.$receive) ;
	; *******************************************************************
	;
	; Program:      tcp_recv
	; Comment:
	; Author:       User
	;
	; Date:         3/30/2022
	;
	; *******************************************************************
	;
	.$recv_buf[1] = .$receive
	.ret = 0
	.eret = -99
	tout_rec = 60
	max_length = 255
	.$receive = ""
	.num = 0
	TCP_RECV .eret, sock_id1, .$recv_buf[1], .num, tout_rec, max_length
	TIMER (3) = 0
	IF .eret < 0 THEN
		PRINT "TCP_RECV error in RECV", .eret
		PRINT ".num = ", .num
		.ret = -1
	ELSE
		IF .num > 0 THEN
			IF .num * max_length <= 255 THEN
				PRINT "TCP_RECV OK in RECV", .eret
				PRINT "Number of array elements = ", .num
				FOR .j = 1 TO .num
					.$receive = .$receive + .$recv_buf[.j]
					PRINT "len(.$recv_buf[", .j, "] = ", LEN (.$recv_buf[.j])
					PRINT ".$receive = ", .$receive
				END
			ELSE
				.ret = -1
				PRINT "String too long"
				PRINT .$recv_buf[1]
			END
		ELSE
			PRINT "Invalid response"
			.ret = -1
		END
	END
.END
.PROGRAM tcp_send(.ret,.$data)
	IF sock_id1 <= 0 GOTO einde
	.$send_buf[1] = .$data
	.buf_n = 1
	.ret = 1
	tout = 60
	tcp_send .sret, sock_id1, .$send_buf[1], .buf_n, tout
	IF .sret < 0 THEN
		.ret = -1
		PRINT "TCP SEND error in SEND", .sret
	ELSE
	END
.END
.PROGRAM test() ;
	WHILE TRUE DO
		numbytes = 10
		max_length = 10
		tout_rec = 60
		ret = 0
		TCP_RECV ret, sock_id1, $recv_buf[1], numbytes, tout_rec, max_length
		IF ret < 0 THEN
			PRINT "TCP_RECV error in RECV", ret
			$recv_buf[1] = "000"
		ELSE
			IF numbytes > 0 THEN
				;PRINT "TCP_RECV OK in RECV", ret
				FOR i = 1 TO numbytes
					PRINT "RecBuff[", i, "]= ", $recv_buf[i]
					IF $recv_buf[1] == "1" THEN
						PRINT "IT IS 1"
						SPEED 80 ALWAYS
						JMOVE #[-100, -59.995, 9.834, 13.745, 8.05, 50.603]
					END
					IF $recv_buf[1] == "2" THEN
						PRINT "IT IS 2"
						SPEED 80 ALWAYS
						JMOVE #[-160, -59.995, 9.834, 13.745, 8.05, 50.603]
					END
				END
			ELSE
				$recv_buf[1] = "000"
				ret = -1
			END
		END
	END
.END
.PROGRAM test1() ;
	; *******************************************************************
	;
	; Program:      test
	; Comment:
	; Author:       User
	;
	; Date:         4/8/2022
	;
	; *******************************************************************
	;
	.port = 8659
	.retsend = -1
	.retrecv = -1
	.$trigger = "s"
	.$end = "end"
	.$stack = "stack"
connection:
	CALL tcp_open1 (.port)
	IF sock_id1 < 0 GOTO connection
receive:
	.$receive = ""
	CALL tcp_recv1 (.retrecv, .$receive)
	IF .retrecv < 0 GOTO receive
	IF .$receive == "start" THEN
		FOR i = 1 TO 2
			JMOVE point2
			TWAIT 1
			CALL tcp_send (.retsend, .$trigger)
			TWAIT 0.1
			JMOVE point1
			TWAIT 1
			CALL tcp_send (.retsend, .$stack)
			TWAIT 0.1
		END
		CALL tcp_send (.retsend, .$end)
		GOTO receive
	END
	IF .$receive == "stop" GOTO closeconnection
closeconnection:
	CALL tcp_close2
.END
.PROGRAM test2() ;
	; *******************************************************************
	;
	; Program:      test
	; Comment:
	; Author:       User
	;
	; Date:         4/8/2022
	;
	; *******************************************************************
	;
	.port = 8657
	.retsend = -1
	.retrecv = -1
	.$trigger = "s"
	.$end = "end"
	.$stack = "stack"
connection:
	CALL tcp_open1 (.port)
	IF sock_id1 < 0 GOTO connection
receive:
	.$receive = ""
	CALL tcp_recv1 (.retrecv, .$receive)
	IF .retrecv < 0 GOTO receive
	IF .$receive == "start" THEN
		FOR i = 1 TO 2
			JMOVE point2
			TWAIT 1
			CALL tcp_send (.retsend, .$trigger)
			TWAIT 0.1
			JMOVE point1
			TWAIT 1
			CALL tcp_send (.retsend, .$stack)
			TWAIT 0.1
		END
		CALL tcp_send (.retsend, .$end)
		GOTO receive
	END
	IF .$receive == "stop" GOTO closeconnection
closeconnection:
	CALL tcp_close2
.END
.PROGRAM test3(.counter) ;
	; *******************************************************************
	;
	; Program:      test3
	; Comment:
	; Author:       User
	;
	; Date:         4/8/2022
	;
	; *******************************************************************
	;
	.retsend = -1
	.$trigger = "s"
	.$end = "end"
	.$stack = "stack"
	IF .counter == 1 THEN
		FOR i = 1 TO 2
			JMOVE point2
			TWAIT 1
			CALL tcp_send (.retsend, .$trigger)
			TWAIT 0.1
			JMOVE point1
			TWAIT 1
			CALL tcp_send (.retsend, .$stack)
			TWAIT 0.1
		END
		CALL tcp_send (.retsend, .$end)
		RETURN
	END
	IF .counter == 2 GOTO closeconnection
closeconnection:
	CALL tcp_close2
.END
.PROGRAM test4(.counter) ;
	; *******************************************************************
	;
	; Program:      test3
	; Comment:
	; Author:       User
	;
	; Date:         4/8/2022
	;
	; *******************************************************************
	;
	.retsend = -1
	.retrecv = -1
	.$trigger = "s"
	.$end = "end"
	.$stack = "stack"
	FOR i = 1 TO 2
		JMOVE point2
		TWAIT 1
		CALL tcp_send (.retsend, .$trigger)
		TWAIT 0.1
		JMOVE point1
		TWAIT 1
		CALL tcp_send (.retsend, .$stack)
		TWAIT 0.1
	END
	CALL tcp_send (.retsend, .$end)
.END
.PROGRAM testnumbersv3() ;
	; *******************************************************************
	;
	; Program:      testnumbers
	; Comment:
	; Author:       User
	;
	; Date:         4/5/2022
	;
	; *******************************************************************
	;
	.count = 1
	.$output = ""
	FOR i = 0 TO 4
		.$output = $ENCODE (/F6, .count)
		PRINT .$output
		.count = .count + 1
	END
.END
.PROGRAM testt1()
	; *******************************************************************
	;
	; Program:      testt1
	; Comment:
	; Author:       User
	;
	; Date:         11/28/2023
	;
	; *******************************************************************
	;
	FOR .i = 1 TO 5
		SPEED 60 ALWAYS
		PRINT "Moving inside loop", .i, "from 5"
		JMOVE #[-74.754, 19.465, 83.58, -45.996, -54.799, 0]
		TWAIT 1
		JMOVE #[-67.487, -5.96, 8.204, -45.996, -54.799, 0]
		TWAIT 1
		LMOVE #[3.222, -9.233, 65.245, 21.612, -28.444, 0]
	END
.END
.PROGRAM testttttt()
	; *******************************************************************
	;
	; Program:      testttttt
	; Comment:
	; Author:       User
	;
	; Date:         5/6/2024
	;
	; *******************************************************************
	;
	PRINT "hi"
.END
.PROGRAM udp()
	; *******************************************************************
	;
	; Program:      udp
	; Comment:
	; Author:       User
	;
	; Date:         5/15/2024
	;
	; *******************************************************************
	;
	timeout = 9
	ip[1] = 192
	ip[2] = 168
	ip[3] = 0
	ip[4] = 2  ; PC's IP address
	port = 10010
	numbytes = 1
	ret = 0
	WHILE TRUE DO
		TWAIT 3
		UDP_RECVFROM ret, port, $cnt[0], numbytes, timeout, ip[1]
		IF ret <> 0 THEN
			PRINT "Error with the UDP Recovery, code: ", ret
			HALT
		END
		PRINT "Message: ", $cnt[0]
		; send confirmation message
		$cnt[0] = $ENCODE (/D, numbytes)
		UDP_SENDTO ret, ip[1], port, $cnt[0], 1, 9
		IF ret <> 0 THEN
			PRINT "Error with the UDP send, code: ", ret
			HALT
		END
	END
.END
.PROGRAM udp_2()
	; *******************************************************************
	;
	; Program:      udp_2
	; Comment:
	; Author:       User
	;
	; Date:         5/27/2024
	;
	; *******************************************************************
	;
	timeout = 9
	ip[1] = 192
	ip[2] = 168
	ip[3] = 0
	ip[4] = 10  ; PC's IP address
	port = 10010
	numbytes = 1
	ret = 0
	WHILE TRUE DO
		TWAIT 3
		UDP_RECVFROM ret, port, $cnt[0], numbytes, timeout, ip[1]
		IF ret <> 0 THEN
			PRINT "Error with the UDP Recovery, code: ", ret
			HALT
		END
		PRINT "Message: ", $cnt[0]
	END
.END
.PROGRAM udp_emergency(.ret,.$receive)
	; *******************************************************************
	;
	; Program:      udp_emergency
	; Comment:      In this program, control parameters are recieved for
	;               the main background process, main.pc. It allows to stop
	;               program execution in case of emergency through the touchscreen.
	;
	; Author:       Ixent Cornella | Student HHS, icorn1
	;
	; Date:         6/4/2024
	;
	; *******************************************************************
	;
	ip[1] = 192
	ip[2] = 168
	ip[3] = 0
	ip[4] = 10
	.$recv_buf[1] = .$receive
	.ret = 0
	tout_rec = 60
	max_length = 255
	.port = 10020
	.$receive = ""
	.num = 0
	; We use udp to recover message from server with the following parameters.
	; Check the Kawasaki AS Manual to get more information on the function.
	UDP_RECVFROM .eret, .port, .$recv_buf[1], .num, tout_rec, ip[1], max_length
	TIMER (3) = 0
	; If recovery has errors:
	IF .eret < 0 THEN
		PRINT "UDP_RECV error in Control Program ", .eret
		PRINT ".num = ", .num
		.ret = -1
		; Else we can proceed.
	ELSE
		; This code expects a string on the recovery buffer.
		; This part will get the string and save it properly on the function parameter
		; for the main background process to use.
		IF .num > 0 THEN
			IF .num * max_length <= 255 THEN
				; PRINT "UDP OK in Control Program RECV ", .eret
				; PRINT "Number of array elements = ", .num
				FOR .j = 1 TO .num
					.$receive = .$receive + .$recv_buf[.j]
					PRINT "len(.$recv_buf[", .j, "] = ", LEN (.$recv_buf[.j])
					PRINT ".$receive = ", .$receive
				END
			ELSE
				.ret = -1
				PRINT "String too long"
				PRINT .$recv_buf[1]
			END
		ELSE
			PRINT "Invalid response"
			.ret = -1
		END
	END
.END
.PROGRAM utp_2()
	; *******************************************************************
	;
	; Program:      utp_2
	; Comment:
	; Author:       User
	;
	; Date:         5/27/2024
	;
	; *******************************************************************
	;
	timeout = 9
	ip[1] = 192
	ip[2] = 168
	ip[3] = 0
	ip[4] = 2  ; PC's IP address
	port = 10010
	numbytes = 1
	ret = 0
	WHILE TRUE DO
		TWAIT 3
		UDP_RECVFROM ret, port, $cnt[0], numbytes, timeout, ip[1]
		IF ret <> 0 THEN
			PRINT "No data received within timeout period or error code: ", ret
			; Continue to the next iteration without halting
		ELSE
			PRINT "Message: ", $cnt[0]
			; send confirmation message
			$cnt[0] = $ENCODE (/D, numbytes)
			UDP_SENDTO ret, ip[1], port, $cnt[0], 1, 9
			IF ret <> 0 THEN
				PRINT "Error with the UDP send, code: ", ret
				; Optionally handle send error but do not halt
			END
		END
	END
.END
.PROGRAM utp_robot1()
	; *******************************************************************
	;
	; Program:      udp_robot1
	; Comment:
	; Author:       Shiyar Jamo | Coder Shiyar HHS Delft
	;
	; Date:         5/27/2024
	;
	; *******************************************************************
	;
	timeout = 120
	answer_timeout = 3
	ip[1] = 192
	ip[2] = 168
	ip[3] = 0
	ip[4] = 10
	port = 10010
	numbytes = 1
	ret = 0
	WHILE TRUE DO
		TWAIT 1
		UDP_RECVFROM ret, port, $cnt[0], numbytes, timeout, ip[1]
		IF ret <> 0 THEN
			PRINT "No data received within timeout period or error code: ", ret
			; Continue to the next iteration without halting
		ELSE
			PRINT "Message: ", $cnt[0]
			IF $cnt[0] == "0" THEN
				PRINT "IT IS 0"
			END
			IF $cnt[0] == "1" THEN
				PRINT "IT IS 1, Dance Mode robot 2"
				SPEED 3 S
				FOR .i = 1 TO 4
					JMOVE #[-55, 71, 0, 0, 0, 45]
					JMOVE #[-80, 28, 0, 0, 0, -45]
					JMOVE #[-40, 71, 0, 0, 0, 45]
					JMOVE #[-120, 48, 0, 0, 0, -45]
					JMOVE #[-55, 71, 0, 0, 0, 45]
					JMOVE #[-20, 48, 0, 0, 0, 45]
				END
			END
			IF $cnt[0] == "3" THEN
				PRINT "IT IS 3 tv mode"
				SPEED 100 ALWAYS
				JMOVE #[-160, -2.405, -3.441, 100.64, 87.897, 184.07]
			END
			IF $cnt[0] == "4" THEN
				SPEED 50 ALWAYS
				PRINT "IT IS 4 detection people mode"
				JMOVE #[-65.05, 6.617, -91.223, 90.552, -2.919, 92.648]
			END
			IF $cnt[0] == "5" THEN
				SPEED 60 ALWAYS
				PRINT "IT IS 5 detection emotion mode"
				JMOVE #[-95.996, 7.024, -11.651, 90.415, 1.545, 269.54]
				JMOVE #[-77.661, 16.977, -37.075, 93.348, 15.48, 262.94]
				JMOVE #[-98.411, 28.083, -50.928, 93.348, -3.589, 167.6]
				JMOVE #[-69.702, 33.844, -55.492, 89.682, -3.589, 114.79]
				JMOVE #[-69.701, 60.146, -25.016, 89.682, -3.589, 94.99]; end point
			END
			; send confirmation message
			$cnt[0] = $ENCODE (/D, numbytes)
			UDP_SENDTO ret, ip[1], port, $cnt[0], 1, answer_timeout
			IF ret <> 0 THEN
				PRINT "Error with the UDP send, code: ", ret
				; Optionally handle send error but do not halt
			END
		END
	END
.END
.PROGRAM utp_robot2() ;
	; *******************************************************************
	;
	; Program:      utp_2
	; Comment:
	; Author:       Shiyar Jamo | Coder Shiyar HHS Delft
	;
	; Date:         5/27/2024
	;
	; *******************************************************************
	;
	timeout = 9
	ip[1] = 192
	ip[2] = 168
	ip[3] = 0
	ip[4] = 2
	port = 10010
	numbytes = 1
	ret = 0
	WHILE TRUE DO
		TWAIT 3
		UDP_RECVFROM ret, port, $cnt[0], numbytes, timeout, ip[1]
		IF ret <> 0 THEN
			PRINT "No data received within timeout period or error code: ", ret
			; Continue to the next iteration without halting
		ELSE
			PRINT "Message: ", $cnt[0]
			IF $cnt[0] == "1" THEN
				PRINT "IT IS 1"
				;JMOVE #[-1.763, -5.005, 0.493,3.324, 0.621,-0.964]
				;TWAIT 1
				;JMOVE #[-1.762,-36.763,  9.152,3.324, 0.621,-0.964]
			END
			IF $cnt[0] == "2" THEN
				PRINT "IT IS 2"
				JMOVE #[54.917, 61.902, 2.811, -0.643, -0.05, 0.069]
				FOR .i = 1 TO 3
					PRINT "Moving inside loop", .i, " from 5"
					JMOVE #[54.917, 81.172, 2.046, -2.362, -0.05, 0.069]
					TWAIT 1
					JMOVE #[54.917, 66.111, 2.047, -2.362, -0.05, 0.069]
				END
			END
			IF $cnt[0] == "0" THEN
				PRINT "IT IS 0"
			END
			; send confirmation message
			$cnt[0] = $ENCODE (/D, numbytes)
			UDP_SENDTO ret, ip[1], port, $cnt[0], 1, 9
			IF ret <> 0 THEN
				PRINT "Error with the UDP send, code: ", ret
				; Optionally handle send error but do not halt
			END
		END
	END
.END
.PROGRAM autostar2.pc() ;
	SIGNAL -2254, -2245
	sock_id1 = -1
	.port = 8701
	.$receive = ""
	.retrecv = -1
	WAIT SWITCH (POWER )
connection:
	CALL tcp_open1 (.port)
	;PRINT sock_id1
	IF sock_id1 < 0 GOTO connection
receive:
	.$receive = ""
	CALL tcp_recv1 (.retrecv, .$receive)
	IF .retrecv < 0 GOTO receive
	IF .$receive == "start" THEN
		MC EXECUTE test4
		GOTO receive
	END
	IF .$receive == "stop" THEN
		CALL tcp_close2
		MC ABORT test4
		GOTO connection
		;PRINT sock_id1
	END
.END
.PROGRAM autostar3.pc() ;
	SIGNAL -2254, -2245
	sock_id1 = -1
	.port = 8702
	.$receive = ""
	.retrecv = -1
	WAIT SWITCH (POWER )
connection:
	CALL tcp_open1 (.port)
	;PRINT sock_id1
	IF sock_id1 < 0 GOTO connection
receive:
	.$receive = ""
	CALL tcp_recv1 (.retrecv, .$receive)
	IF .retrecv < 0 GOTO receive
	IF .$receive == "start" THEN
		MC EXECUTE test4
		GOTO receive
	END
	IF .$receive == "stop" THEN
		CALL tcp_close2
		MC ABORT test4
		GOTO connection
		;PRINT sock_id1
	END
.END
.PROGRAM autostart.pc() ;
  ; *******************************************************************
  ;
  ; Program:      autostart.pc
  ; Comment:      In this code we run background program to control the
  ;               execution of the main program for the DEMOBOT project
  ;
  ; Remarks:      This program is a copy of bg_control1.pc. When the 
  ;               AUTOSTART.PC signal is ON, this program automatically
  ;               starts on the background. You can check what signals
  ;               are on with the SWITCH command.
  ; Author:       Ixent Cornella | Student HHS; gthb/icorn1
  ; Date:         6/4/2024
  ;
  ; *******************************************************************
  ;
  .retrecv = -1
  ; WAIT FOR POWER TO START main PROGRAM, OTHERWISE WE GET ERRORS
  WAIT SWITCH (POWER )
  MC EXECUTE main_robot1
  ; Constant execution of the code with GOTO loop
receive:
  .$receive = ""
  ; This next program "udp_emergency" recieves control commands from server via udp
  CALL udp_emergency (.retrecv, .$receive)
  IF .retrecv < 0 GOTO receive
  ; Recieve buffer is updated in udp_emergency
  IF .$receive == "hold" THEN
    MC HOLD
    PRINT " -> PROGRAM HELD"
    GOTO receive
  END
  IF .$receive == "continue" THEN
    MC CONTINUE
    PRINT " -> PROGRAM RESUMED"
    GOTO receive
  END
.END
.PROGRAM autostart1.pc() ;
	SIGNAL -2254, -2245
	sock_id1 = -1
	.port = 8700
	.$receive = ""
	.retrecv = -1
	WAIT SWITCH (POWER )
connection:
	IF sock_id1 < 0 THEN
		CALL tcp_open1 (.port)
		;PRINT sock_id1
	END
	IF sock_id1 < 0 GOTO connection
receive:
	.$receive = ""
	CALL tcp_recv1 (.retrecv, .$receive)
	IF .retrecv < 0 GOTO receive
	IF .$receive == "start" THEN
		MC EXECUTE test4
		GOTO receive
	END
	IF .$receive == "stop" THEN
		CALL tcp_close2
		MC ABORT test4
		GOTO connection
		;PRINT sock_id1
	END
.END
.PROGRAM autostart2.pc() ;
	SIGNAL -2254, -2245
	sock_id1 = -1
	.port = 8704
	.$receive = ""
	.retrecv = -1
	WAIT SWITCH (POWER )
connection:
	PRINT "connecting"
	CALL tcp_open1 (.port)
	;PRINT sock_id1
	IF sock_id1 < 0 GOTO connection
receive:
	.$receive = ""
	CALL tcp_recv1 (.retrecv, .$receive)
	IF .retrecv < 0 GOTO receive
	IF .$receive == "start" THEN
		MC EXECUTE test4
		GOTO receive
	END
	IF .$receive == "stop" THEN
		CALL tcp_close2
		MC ABORT test4
		;PRINT sock_id1
	END
	IF .$receive == "pause" THEN
		MC PAUSE test4
		GOTO receive
	END
	IF .$receive == "resume" THEN
		MC CONTINUE test4
		GOTO receive
	END
.END
.PROGRAM autostart3.pc() ;
	SIGNAL -2254, -2245
	sock_id1 = -1
	.port = 8705
	.$receive = ""
	.retrecv = -1
	WAIT SWITCH (POWER )
connection:
	PRINT "connecting"
	CALL tcp_open1 (.port)
	;PRINT sock_id1
	IF sock_id1 < 0 GOTO connection
receive:
	.$receive = ""
	CALL tcp_recv1 (.retrecv, .$receive)
	IF .retrecv < 0 GOTO receive
	IF .$receive == "start" THEN
		MC EXECUTE test4
		GOTO receive
	END
	IF .$receive == "stop" THEN
		CALL tcp_close2
		MC ABORT test4
		;PRINT sock_id1
	END
	IF .$receive == "pause" THEN
		MC PAUSE test4
		GOTO receive
	END
	IF .$receive == "resume" THEN
		MC CONTINUE test4
		GOTO receive
	END
.END
.PROGRAM autostart4.pc() ;
	SIGNAL -2254, -2245
	sock_id1 = -1
	.port = 8663
	.$receive = ""
	.retrecv = -1
	WAIT SWITCH (POWER )
	WHILE TRUE DO
connection:
		IF sock_id1 < 0 THEN
			CALL tcp_open1 (.port)
		END
		IF sock_id1 < 0 GOTO connection
receive:
		.$receive = ""
		CALL tcp_recv1 (.retrecv, .$receive)
		IF .retrecv < 0 GOTO receive
		IF .$receive == "start" THEN
			MC EXECUTE test4
		END
		IF .$receive == "stop" THEN
			CALL tcp_close2
			MC ABORT test4
			PRINT sock_id1
		END
	END
.END
.PROGRAM bg_cotrol1.pc()
  ; *******************************************************************
  ;
  ; Program:      bg_cotrol1.pc
  ; Comment:      In this code we run background program to control the
  ;               execution of the main program for the DEMOBOT project
  ;
  ; Remarks:      This code is the original source of current autostart program.
  ;               
  ; Author:       Ixent Cornella | Student HHS; gthb/icorn1
  ; Date:         6/4/2024
  ;
  ; *******************************************************************
  ;
  .retrecv = -1
  ; WAIT FOR POWER TO START main PROGRAM, OTHERWISE WE GET ERRORS
  WAIT SWITCH (POWER )
  MC EXECUTE main_robot1
  ; Constant execution of the code
receive:
  .$receive = ""
  ; This program recieves control commands from server via udp
  CALL udp_emergency (.retrecv, .$receive)
  IF .retrecv < 0 GOTO receive
  ; Recieve buffer is updated in udp_test
  IF .$receive == "hold" THEN
    MC HOLD
    PRINT " -> PROGRAM HELD"
    GOTO receive
  END
  IF .$receive == "continue" THEN
    MC CONTINUE
    PRINT " -> PROGRAM RESUMED"
    GOTO receive
  END
.END
.PROGRAM main1.pc() ;
	SIGNAL -2254, -2245
	sock_id1 = -1
	.port = 8700
	.$receive = ""
	.retrecv = -1
	WAIT SWITCH (POWER )
connection:
	CALL tcp_open1 (.port)
	;PRINT sock_id1
	IF sock_id1 < 0 GOTO connection
receive:
	.$receive = ""
	CALL tcp_recv1 (.retrecv, .$receive)
	IF .retrecv < 0 GOTO receive
	IF .$receive == "start" THEN
		MC EXECUTE test4
		GOTO receive
	END
	IF .$receive == "stop" THEN
		CALL tcp_close2
		MC ABORT test4
		GOTO connection
		;PRINT sock_id1
	END
.END
.PROGRAM tcpcloseclnt.pc(.sock_id) ; TCP/IP-Verbindung trennen als Client
	; *******************************************************************
	;
	; Programm: TcpCloseClnt
	; Beschreibung: TCP/ip-Verbindung trennen als Client
	; Autor: CQ
	;
	; Datum: 22.09.2015
	;
	; Parameter:
	;		.sock_id						Socket-ID der aktiven Verbindung
	;
	; *******************************************************************
	;
	; tcp_close <return-value> (0=ok), <socket-id>
	TCP_CLOSE .ret, .sock_id
	;
	PRINT "TCP_CLOSE  ret = ", .ret
.END
.PROGRAM tcpclosesvr.pc(.sock_id,.port) ; TCP/IP-Verbindung trennen als Server
	; *******************************************************************
	;
	; Programm: TcpCloseSvr
	; Beschreibung: TCP/ip-Verbindung trennen als Server
	; Autor: CQ
	;
	; Datum: 22.09.2015
	;
	; Parameter:
	;   .sock_id            Socket-ID der aktiven Verbindung
	;   .port               Portnummer (8192 - 65535)
	;
	; *******************************************************************
	;
	IF .sock_id >= 0 THEN
		; tcp_close <return-value> (0=ok), <socket-id>
		TCP_CLOSE .ret, .sock_id
		PRINT "TCP_CLOSE  ret = ", .ret
	END
	;
	; TCP_END_LISTEN <return-value> (0=ok), <port> (8192 ... 65535)
	TCP_END_LISTEN .ret, .port
	PRINT "TCP_END_LISTEN  ret = ", .ret
.END
.PROGRAM tcpopenclnt.pc(.$tcp_adr,.port,.sock_id) ; TCP/IP-Verbindung herstellen als Client
	; *******************************************************************
	;
	; Programm: TcpOpenClnt
	; Beschreibung: TCP/ip-Verbindung herstellen als Client
	; Autor: CQ
	;
	; Datum: 22.09.2015
	;
	; Parameter:
	;   .$tcp_adr           TCP/ip-Adresse des Verbindungspartners
	;                       Beispiel: "192.168.0.100"
	;   .port               Portnummer des Verbindungspartners (8192 ...65535)
	;   .sock_id            Ausgabeparameter der Socket-ID
	;
	; *******************************************************************
	;
	; ip-Adresse decodieren
	FOR .i = 1 TO 4
		.$ip = $DECODE (.$tcp_adr, ".", 0)
		.ip[.i] = VAL (.$ip)
		IF .i < 4 THEN
			.$ip = $DECODE (.$tcp_adr, ".", 1)
		END
	END
	;
	; Verbindung aufbauen
	.i = 1                                        ; Zähler Versuche
	DO
		; TCP_CONNECT <socket-id> (>=0 ok), <port> (8192 .. 65535), <ip-adresse-array>, <time-out>
		TCP_CONNECT .sock_id, .port, .ip[1], 60     ; Verbindung herstellen
		IF .sock_id < 0 THEN
			.i = .i + 1                               ; Verbindungszähler
			TWAIT 0.016                               ; Wartezeit
		END
	UNTIL (.sock_id >= 0) OR (.i > 3)
	;
	; ok-Meldung abgeben
	IF .i <= 3 THEN
		PRINT "TCP_CONNECT OK id = ", .sock_id       ; Verbindung hergestellt
	ELSE
		PRINT "TCP_CONNECT ERR  code = ", .sock_id  ; Fehlercode
	END
.END
.PROGRAM tcpopensrv.pc(.$tcp_adr,.port,.sock_id) ; TCP/IP-Verbindung herstellen als Server
	; *******************************************************************
	;
	; Programm: TcpOpenSrv
	; Beschreibung: TCP/ip-Verbindung herstellen als Server
	; Autor: CQ
	;
	; Datum: 22.09.2015
	;
	; Parameter:
	;   .$tcp_adr           TCP/ip-Adresse des Verbindungspartners (Client)
	;                       Beispiel: "192.168.0.100"
	;   .port               Portnummer des Verbindungspartners (8192 ... 65535)
	;   .sock_id            Ausgabeparameter der Socket-ID
	;
	; *******************************************************************
	;
	.ip[1] = 0
	.ip[2] = 0
	.ip[3] = 0
	.ip[4] = 0
	.ret = 0
	;
	; am port lauschen, bis Verbindung angefordert wird
	DO
		; TCP_LISTEN <return-code> (0=ok), <port> (8192 ... 65535)
		TCP_LISTEN .ret, .port
		IF .ret < 0 THEN
			TWAIT 1
		END
	UNTIL .ret >= 0
	;
	PRINT "TCP_Listen OK ret = ", .ret
	;
	; Verbindung akzeptieren
	DO
		; TCP_ACCEPT <socket-id> (>=0 ok), <port> (8192 ... 65535), <timeout> (in sek), <ip-Array> (ip-Adresse des Client)
		TCP_ACCEPT .sock_id, .port, 5, .ip[1]
	UNTIL .sock_id >= 0
	;
	; ip-Adresse codieren ("192.168.0.100")
	FOR .i = 1 TO 4
		.$tcp_adr = .$tcp_adr + $ENCODE (ip[.i])
		IF .i < 4 THEN
			.$tcp_adr = .$tcp_adr + "."
		END
	END
	;
	PRINT "TCP_ACCEPT OK"
	PRINT "Socket-ID =  ", .sock_id
	PRINT "Client-IP =  ", .$tcp_adr
	PRINT "Client-Port: ", .port
	;
.END
.PROGRAM tcprec.pc(.sock_id,.$tcp_data[],.num,.to,.ret) ; Daten von TCP/IP empfangen
	; *******************************************************************
	;
	; Programm: TcpRec
	; Beschreibung: Daten von TCP/ip empfangen
	; Autor: CQ
	;
	; Datum: 22.09.2015
	;
	; Parameter:
	;   .sock_id            Socket-ID der aktiven Verbindung
	;   .$tcp_data          Ausgabeparameter empfangene Daten
	;   .num                Ausgabeparameter Anzahl der empfangenen Array-Elemente in $TCP_DATA[]
	;   .ret                Return-Code
	;
	; *******************************************************************
	;
	; Socket-ID prüfen
	IF .sock_id < 0 THEN
		RETURN
	END
	;
	; Daten empfangen
	.num = 0
	; tcp_recv <return-value> (0=ok), <socket-id>, <data-array>, <anzahl elemente array>, <time-out>, <max. länge string-element> (1 ... 255)
	TCP_RECV .ret, .sock_id, .$tcp_data[1], .num, .to, 255
	;
	; .ret = -34024 : timeout (no data received)
	IF .ret == -34024 THEN
		.ret = 0
	END
	;
	IF .ret >= 0 THEN
		PRINT "TCP_RECV OK  ret = ", .ret
		;
		IF .num > 0 THEN
			PRINT "Anzahl Datensätze: ", .num
			;
			FOR .i = 1 TO .num
				PRINT "Daten ", .i, ": ", .$tcp_data[.i]
			END
		ELSE
			PRINT "keine Datensätze empfangen"
		END
	END
.END
.PROGRAM tcpsend.pc(.sock_id,.$tcp_data[],.num,.to,.ret) ; Daten an TCP/IP senden
	; *******************************************************************
	;
	; Programm: TcpSend
	; Beschreibung: Daten an TCP/ip senden
	; Autor: CQ
	;
	; Datum: 22.09.2015
	;
	; Parameter:
	;   .sock_id            Socket-ID der aktiven Verbindung
	;   .$tcp_data          zu sendende Daten
	;   .num                Anzahl der Array-Elemente in $TCP_DATA[]
	;   .ret                Return-Code
	;
	; *******************************************************************
	;
	; Socket-ID prüfen
	IF .sock_id < 0 THEN
		RETURN
	END
	;
	; Daten senden
	; tcp_send <return-value> (0 = ok), <socket-id>, <data-array>, <anzahl elemente array>, <time-out>
	tcp_send .ret, .sock_id, .$tcp_data[1], .num, .to    ; Daten senden
	;
	IF .ret >= 0 THEN
		PRINT "TCP_SEND OK  ret = ", .ret
	ELSE
		PRINT "TCP_SEND ERR ret = ", .ret
	END
.END
.PROGRAM Comment___ () ; Comments for IDE. Do not use.
	; @@@ PROJECT @@@
	; @@@ PROJECTNAME @@@
	; test
	; @@@ HISTORY @@@
	; 28.05.2024 11:30:20
	; 
	; 04.06.2024 15:09:47
	; 
	; @@@ INSPECTION @@@
	; @@@ CONNECTION @@@
	; Right Kawa (2)
	; 192.168.0.2
	; 23
	; @@@ PROGRAM @@@
	; 0:udp_robot1:F
	; .i 
	; 0:udp_robot2:F
	; .i 
	; 0:closeconnection:F
	; 0:connect_to_pc:F
	; 0:dance1:F
	; .i 
	; 0:decode_traj_pt:F
	; .msg_id 
	; .prog_speed 
	; .prog_acc 
	; .prog_accel 
	; .prog_decel 
	; .prog_break 
	; .joint0 
	; .joint1 
	; .joint2 
	; .joint3 
	; .joint4 
	; .joint5 
	; .seq_num 
	; 0:del_front_queue:F
	; 0:encode_pose:F
	; .cp 
	; 0:init:F
	; 0:init_kawa:F
	; 0:ins_rear_queue:F
	; .msg_id 
	; .prog_speed 
	; .prog_acc 
	; .prog_accel 
	; .prog_decel 
	; .prog_break 
	; .joint0 
	; .joint1 
	; .joint2 
	; .joint3 
	; .joint4 
	; .joint5 
	; 0:main:F
	; 0:main_robot1:F
	; .i 
	; 0:move_backward:F
	; 0:move_kawa:F
	; .current_speed 
	; .current_accurac 
	; .current_deceler 
	; .current_acceler 
	; .next_cartesian_ 
	; 0:pg6668:F
	; 0:read_tcp_buffer:F
	; .msg_length 
	; .msg_id 
	; .prog_speed 
	; .prog_acc 
	; .prog_accel 
	; .prog_decel 
	; .prog_break 
	; .joint0 
	; .joint1 
	; .joint2 
	; .joint3 
	; .joint4 
	; .joint5 
	; 0:receive_data:F
	; .i 
	; 0:recv_tcp_serv:F
	; .recv_port 
	; .timeout_recv 
	; .num 
	; .ret_listen 
	; .recv_sockid 
	; .ret 
	; .i 
	; 0:send:F
	; 0:send_pos_serv:F
	; .send_port 
	; .send_msgs_per_s 
	; .timeout_recv 
	; .num 
	; .ret_listen 
	; .ret_sockid 
	; .send_sockid 
	; .ret 
	; 0:shutdown_kawa:F
	; 0:smr2:F
	; 0:smr2_recieve:F
	; 0:speed_test1:F
	; 0:tcp_close2:F
	; 0:tcp_open1:F
	; .port 
	; .er_count 
	; 0:tcp_open_new:F
	; .port 
	; .er_count 
	; 0:tcp_recv1:F
	; .ret 
	; .eret 
	; .num 
	; .j 
	; 0:tcp_send:F
	; .ret 
	; .buf_n 
	; .sret 
	; 0:test:F
	; 0:test1:F
	; .port 
	; .retsend 
	; .retrecv 
	; 0:test2:F
	; .port 
	; .retsend 
	; .retrecv 
	; 0:test3:F
	; .counter 
	; .retsend 
	; 0:test4:F
	; .counter 
	; .retsend 
	; .retrecv 
	; 0:testnumbersv3:F
	; .count 
	; 0:testt1:F
	; .i 
	; 0:testttttt:F
	; 0:udp:F
	; 0:udp_2:F
	; 0:udp_emergency:F
	; .ret 
	; .port 
	; .num 
	; .eret 
	; .j 
	; 0:utp_2:F
	; 0:utp_robot1:F
	; .i 
	; 0:utp_robot2:F
	; .i 
	; 0:autostar2.pc:B
	; .port 
	; .retrecv 
	; 0:autostar3.pc:B
	; .port 
	; .retrecv 
	; 0:autostart.pc:B
	; .retrecv 
	; 0:autostart1.pc:B
	; .port 
	; .retrecv 
	; 0:autostart2.pc:B
	; .port 
	; .retrecv 
	; 0:autostart3.pc:B
	; .port 
	; .retrecv 
	; 0:autostart4.pc:B
	; .port 
	; .retrecv 
	; 0:bg_cotrol1.pc:B
	; .retrecv 
	; 0:main1.pc:B
	; .port 
	; .retrecv 
	; 0:tcpcloseclnt.pc:B
	; .sock_id 
	; .ret 
	; 0:tcpclosesvr.pc:B
	; .sock_id 
	; .port 
	; .ret 
	; 0:tcpopenclnt.pc:B
	; .port 
	; .sock_id 
	; .i 
	; .ip 
	; 0:tcpopensrv.pc:B
	; .port 
	; .sock_id 
	; .ip 
	; .ret 
	; .i 
	; 0:tcprec.pc:B
	; .sock_id 
	; .num 
	; .to 
	; .ret 
	; .i 
	; 0:tcpsend.pc:B
	; @@@ TRANS @@@
	; @@@ JOINTS @@@
	; @@@ REALS @@@
	; @@@ STRINGS @@@
	; @@@ INTEGER @@@
	; @@@ SIGNALS @@@
	; @@@ TOOLS @@@
	; @@@ BASE @@@
	; @@@ FRAME @@@
	; @@@ BOOL @@@
.END
.TRANS
h -38.000000 49.000000 200.000000 -72.663857 73.441437 -149.849289
p1 -253.525894 -196.180786 456.096893 -72.347580 73.339729 -149.837570
p2 -163.709976 -8.498540 469.028168 -72.663094 73.441963 -149.849030
point1 380.321259 56.329994 271.370270 7.899858 84.245682 -63.639194
point2 -384.469788 -1.231508 271.370148 179.658478 84.245766 -63.639874
point3 -16.836855 0.825267 529.858276 174.880585 6.963669 -58.305698
point4 -264.589691 -7.481894 531.384094 -178.304474 30.538462 -63.417774
shiend 99.143402 142.635834 568.762878 -111.753792 9.082553 142.197784
.END
.JOINTS
#first_position 33.924000 16.416000 17.475000 13.746000 8.050000 50.603001
#p1 15.880410 42.491341 97.509087 -43.838829 -58.691986 160.609848
#p2 93.293053 38.736961 84.540833 -63.948139 -92.546661 258.120056
#p3 7.254440 31.827309 62.906570 -146.365921 -46.076981 282.961426
#point1 33.923786 16.416096 17.474842 13.746405 8.050396 50.603420
#point2 -90.320602 -14.874351 -99.888725 220.589233 -1.012590 -194.291092
#point3 -90.321045 -35.824493 -43.525879 220.589233 -1.012316 -194.291092
#point4 -91.605995 -5.864853 -37.087620 176.197266 -0.685838 -149.537506
#position_test_p -39.179169 63.048908 -15.868915 -170.708588 -0.611703 -359.919678
#shiend 33.924225 16.416096 17.475117 13.747064 8.050404 50.603439
#shistart -66.411446 16.416828 17.475117 13.747064 8.050129 50.602791
#test 0.000000 1.000000 2.000000 3.000000 4.000000 5.000000
.END
.REALS
answer_timeout = 3
confirm_code = 1000
er_count = 0
eret = -99
error_code = 4000
i = 3
ip[1] = 192
ip[2] = 168
ip[3] = 0
ip[4] = 10
ipa[0] = 192
ipa[1] = 192
ipa[2] = 168
ipa[3] = 0
ipa[4] = 2
keep_active_sig = 2010
max_length = 255
num = 0
num_received = 0
numbytes = 1
port = 10010
receive_buffer = 39
ret = -34024
ret1 = 0
sock_id1 = -1
timeout = 120
tout = 60
tout_open = 60
tout_rec = 60
.END
.STRINGS
$cnt[0] = "1"
$message = " 1"
$movement_state = "Initiating"
$read_tcp_buffer = "Initiating"
$recv_buf[1] = "000"
$recv_buf[2] = "12121"
$recv_buf[3] = "12"
$recv_buf[4] = "1212121212"
$recv_buf[5] = "o!Hello!He"
$recv_buf[6] = "llo!Hello!"
$recv_buf[7] = "Hello!Hell"
$recv_buf[8] = "o!Hello!He"
$recv_buf[9] = "llo!Hello!"
$recv_buf[10] = "Hello!Hell"
$recv_buf[11] = "o!Hello!He"
$recv_buf[12] = "llo!Hello!"
$recv_buf[13] = "Hello!Hell"
$recv_buf[14] = "o!Hello!He"
$recv_buf[15] = "llo!Hello!"
$recv_buf[16] = "Hello!Hell"
$recv_buf[17] = "o!Hello!He"
$recv_buf[18] = "llo!Hello!"
$recv_buf[19] = "Hello!Hell"
$recv_buf[20] = "o!Hello!He"
$recv_buf[21] = "llo!Hello!"
$recv_buf[22] = "Hello!Hell"
$recv_buf[23] = "o!Hello!He"
$recv_buf[24] = "llo!Hello!"
$recv_buf[25] = "Hello!Hell"
$recv_buf[26] = "o!"
$recv_tcp_serv_s = "Closed succesfully"
$send_buf[1] = "\"
$termchk = "\r\n"
.END
