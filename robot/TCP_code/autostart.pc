.PROGRAM autostart.pc() ;
	; *******************************************************************
	;
	; Program:      autostart.pc
	; Comment:
	;
	; Author:       Anton Vonk
	; Date:         14/1/2024
	;
	; *******************************************************************
	;
	; SWITCH      SWITCH autostart.pc OFF
	; SWITCH      SWITCH autostart.pc ON
	; look at ONE for error handling
	; WAIT FOR POWER TO START main PROGRAM, OTHERWISE WE GET ERRORS
	WAIT SWITCH (POWER )
	TWAIT 5
	;
	new_message = 0
	overwrite_mode = 0
	socket_ID = -1
	TCP_listen_act = FALSE
	;
	MC EXECUTE promo_v2_front
	TWAIT 1
	;
	.port = 42069
	.$recv_buf[0] = ""
	.receive_amount = 0
	.transmission_co = FALSE
	.message_number = 0
	.main_sys_pause = FALSE
	;
	IF TASK (1) == 1 THEN  ;check if robot is CONTINUE before HOLD
    	MC HOLD
	END
  	;
	IF socket_ID > -1 THEN
    	CALL TCP_server_clos (socket_ID, .port)
    	socket_id = -1
    	tcp_listen_act = FALSE
	END
	;
	IF TCP_listen_act == TRUE THEN
    	.error_id = 0
    	TCP_END_LISTEN .error_id, .port
    	tcp_listen_act = FALSE
	END
	;
	WHILE TRUE DO                         ;maybe an aditional while loop is needed to fix the exit_end
		tcp_listen_act = TRUE
    	CALL TCP_server_open (.port, socket_ID)
    	IF socket_ID < 0 THEN
    		GOTO exit_end
		END
		$message = ""
		new_message = 0
		IF TASK (1) == 2 THEN    ;check if robot is HOLD before CONTINUE
			MC CONTINUE
			.main_sys_pause = FALSE
		END
		;
		WHILE TRUE DO
    		CALL TCP_server_recv (socket_ID, .$recv_buf[], .receive_amount);Receiving the result of processing 1
			IF .receive_amount < 0 THEN ;IF it is lass then zero an error occured
				IF .receive_amount == -34025 THEN
					PRINT "CONNECTION HAS BEEN CLOSED FROM THE OTHER SIDE"
					GOTO exit
				ELSE
					PRINT "CODE 003 RECV ERROR"
					GOTO exit
				END
			END
			;
			PRINT .$recv_buf[0] ;For debugging and control
			;
			;IF there is PAUSE or CONTINUE received skip the set message steps
			IF INSTR (0 , .$recv_buf[0] , "PAUSE") > 0 THEN
				IF TASK (1) == 1 THEN  ;check if robot is CONTINUE before HOLD
					MC HOLD
				END
				.main_sys_pause = TRUE
				GOTO send_back
			END
			IF INSTR (0 , .$recv_buf[0] , "CONTINUE") > 0 THEN
				IF TASK (1) == 2 THEN  ;check if robot is CONTINUE before HOLD
					MC CONTINUE
				END
				.main_sys_pause = FALSE
				GOTO send_back
			END
			; The main system is in pause mode and the received command is not CONTINUE so step pointer can go to send_back
			IF .main_sys_pause == TRUE THEN
				GOTO send_back
			END
			;
			; Set the incomming command depending on the state of the overwrite mode
			IF Overwrite_mode == 1 THEN ;In Overwrite_mode the new command directly overwrites the old command without checking if it is run
				$message = .$recv_buf[0]
				new_message = 1
				;
				IF INSTR (0 , .$recv_buf[0] , "Overwrite_mode") > 0 THEN  ; If there is Overwrite_mode in the command it waits until that one is executed
					WHILE new_message == 1 AND Overwrite_mode == 1 DO
						$message = .$recv_buf[0]
						new_message = 1
						.break_code = FALSE
						CALL TCP_S_detec_clo (socket_ID, .break_code)
						IF .break_code == 1 THEN
							GOTO exit
						END
						IF .break_code == 2 THEN
							IF TASK (1) == 1 THEN  ;check if robot is CONTINUE before HOLD
								MC HOLD
							END
							.main_sys_pause = TRUE
						END
					END
				END
			ELSE  ; The TCP connection waits until the last message is executed before and then it will go to the send back
				$message = .$recv_buf[0]
				new_message = 1
				WHILE new_message == 1 AND Overwrite_mode == 0 DO
					.break_code = FALSE
					CALL TCP_S_detec_clo (socket_ID, .break_code)
					IF .break_code == 1 THEN
						GOTO exit
					END
					IF .break_code == 2 THEN
						IF TASK (1) == 1 THEN  ;check if robot is CONTINUE before HOLD
							MC HOLD
						END
						.main_sys_pause = TRUE
					END
				END
			END
			;
send_back:
			.$data = ""
			IF ret_data_avail == TRUE THEN ; If there is return data availible return the given data
				.$data = $return_message
				ret_data_avail = FALSE
			ELSE                          ; Otherwise give a sequence number back
				.message_number = .message_number + 1
				.$data = "Message: " + $ENCODE (.message_number)
			END
			CALL TCP_server_send (socket_ID, .$data, .transmission_co);Instructing processing 1
			IF .transmission_co <> TRUE THEN
				PRINT "CODE 001 SEND ERROR"
				GOTO exit
			END
		END
		;
exit:
		; Pause the main system and close the connection
		IF TASK (1) == 1 THEN  ;check if robot is CONTINUE before HOLD
			MC HOLD
		END
		.main_sys_pause = TRUE
		CALL TCP_server_clos (socket_ID, .port);Closing communication
		tcp_listen_act = FALSE
		socket_id = -1
	END
exit_end:
.END